{"remainingRequest":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\store\\modules\\admin\\acceso.js","dependencies":[{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\store\\modules\\admin\\acceso.js","mtime":1592778473663},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1580396457614},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js","mtime":1580396469731}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\kevin\\\\proyectos\\\\vuejs\\\\EcomerceFrontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find\";\nimport { accesPermissionsByUserTokenUrl, hasThisPermissionUrl } from '../../../packages/config';\nvar state = {\n  rolId: '',\n  acceso: []\n};\nvar getters = {\n  hasPermission: function hasPermission(state) {\n    return function (permiso) {\n      // console.log(state.acceso)\n      return state.acceso.find(function (a) {\n        return a.name === permiso;\n      }) ? true : false;\n    };\n  }\n};\nvar mutations = {\n  retrieveAcceso: function retrieveAcceso(state, allAcceso) {\n    state.acceso = allAcceso;\n  },\n  retrieveRolForUser: function retrieveRolForUser(state, rolId) {\n    state.rolId = rolId;\n  }\n};\nvar actions = {\n  //accesPermissionsByUserToken \n  retrieveAcceso: function retrieveAcceso(_ref) {\n    var dispatch = _ref.dispatch,\n        commit = _ref.commit;\n\n    if (localStorage.getItem('access_token')) {\n      this.$myApi.get(accesPermissionsByUserTokenUrl).then(function (response) {\n        dispatch('retrieveRolForUser', response.data.role_id);\n        commit('retrieveAcceso', response.data.rolePermission);\n      });\n    }\n  },\n  retrieveRolForUser: function retrieveRolForUser(context, roleId) {\n    localStorage.setItem('role_id', roleId);\n    context.commit('retrieveRolForUser', roleId);\n  },\n  hasThisPermission: function hasThisPermission(context, permission) {\n    var _this = this;\n\n    return new _Promise(function (resolve, reject) {\n      _this.$myApi.post(hasThisPermissionUrl, {\n        namePermission: permission\n      }).then(function (response) {\n        // console.log(response)\n        resolve(response.data.hasPermission);\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\store\\modules\\admin\\acceso.js"],"names":["accesPermissionsByUserTokenUrl","hasThisPermissionUrl","state","rolId","acceso","getters","hasPermission","permiso","find","a","name","mutations","retrieveAcceso","allAcceso","retrieveRolForUser","actions","dispatch","commit","localStorage","getItem","$myApi","get","then","response","data","role_id","rolePermission","context","roleId","setItem","hasThisPermission","permission","resolve","reject","post","namePermission","catch","error","console","log"],"mappings":";;;AAAA,SAAQA,8BAAR,EAAuCC,oBAAvC,QAAkE,0BAAlE;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,KAAK,EAAC,EADM;AAEZC,EAAAA,MAAM,EAAC;AAFK,CAAd;AAKA,IAAMC,OAAO,GAAC;AACZC,EAAAA,aAAa,EAAE,uBAAAJ,KAAK;AAAA,WAAI,UAAAK,OAAO,EAAI;AACjC;AACA,aAAQL,KAAK,CAACE,MAAN,CAAaI,IAAb,CAAkB,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,IAAF,KAAWH,OAAf;AAAA,OAAnB,CAAD,GAA+C,IAA/C,GAAsD,KAA7D;AACH,KAHqB;AAAA;AADR,CAAd;AAMA,IAAMI,SAAS,GAAG;AAChBC,EAAAA,cADgB,0BACDV,KADC,EACMW,SADN,EACiB;AAC/BX,IAAAA,KAAK,CAACE,MAAN,GAAeS,SAAf;AACD,GAHe;AAIhBC,EAAAA,kBAJgB,8BAIGZ,KAJH,EAIUC,KAJV,EAIiB;AAC/BD,IAAAA,KAAK,CAACC,KAAN,GAAcA,KAAd;AACD;AANe,CAAlB;AAQA,IAAMY,OAAO,GAAG;AACd;AACAH,EAAAA,cAFc,gCAEqB;AAAA,QAAlBI,QAAkB,QAAlBA,QAAkB;AAAA,QAARC,MAAQ,QAARA,MAAQ;;AACjC,QAAGC,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAH,EAAwC;AACtC,WAAKC,MAAL,CAAYC,GAAZ,CAAgBrB,8BAAhB,EACGsB,IADH,CACQ,UAAAC,QAAQ,EAAI;AAChBP,QAAAA,QAAQ,CAAC,oBAAD,EAAsBO,QAAQ,CAACC,IAAT,CAAcC,OAApC,CAAR;AACAR,QAAAA,MAAM,CAAC,gBAAD,EAAmBM,QAAQ,CAACC,IAAT,CAAcE,cAAjC,CAAN;AACD,OAJH;AAKD;AACF,GAVa;AAWdZ,EAAAA,kBAXc,8BAWKa,OAXL,EAWaC,MAXb,EAWoB;AAChCV,IAAAA,YAAY,CAACW,OAAb,CAAqB,SAArB,EAAgCD,MAAhC;AACAD,IAAAA,OAAO,CAACV,MAAR,CAAe,oBAAf,EAAqCW,MAArC;AACD,GAda;AAedE,EAAAA,iBAfc,6BAeIH,OAfJ,EAeaI,UAfb,EAewB;AAAA;;AACpC,WAAO,aAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,MAAA,KAAI,CAACb,MAAL,CAAYc,IAAZ,CAAiBjC,oBAAjB,EAAuC;AACrCkC,QAAAA,cAAc,EAAEJ;AADqB,OAAvC,EAGGT,IAHH,CAGQ,UAAAC,QAAQ,EAAI;AAChB;AACAS,QAAAA,OAAO,CAACT,QAAQ,CAACC,IAAT,CAAclB,aAAf,CAAP;AACD,OANH,EAOG8B,KAPH,CAOS,UAAAC,KAAK,EAAI;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAJ,QAAAA,MAAM,CAACI,KAAD,CAAN;AACD,OAVH;AAWC,KAZI,CAAP;AAaE;AA7BU,CAAhB;AAgCA,eAAc;AACVnC,EAAAA,KAAK,EAALA,KADU;AACHG,EAAAA,OAAO,EAAPA,OADG;AACMM,EAAAA,SAAS,EAATA,SADN;AACiBI,EAAAA,OAAO,EAAPA;AADjB,CAAd","sourcesContent":["import {accesPermissionsByUserTokenUrl,hasThisPermissionUrl} from '../../../packages/config'\r\n\r\nconst state = {\r\n  rolId:'',\r\n  acceso:[],\r\n\r\n}\r\nconst getters={\r\n  hasPermission: state => permiso => {\r\n    // console.log(state.acceso)\r\n    return (state.acceso.find(a => a.name === permiso)) ? true : false ;\r\n},\r\n}\r\nconst mutations = {\r\n  retrieveAcceso(state, allAcceso) {\r\n    state.acceso = allAcceso\r\n  },\r\n  retrieveRolForUser(state, rolId) {\r\n    state.rolId = rolId\r\n  },\r\n}\r\nconst actions = {\r\n  //accesPermissionsByUserToken \r\n  retrieveAcceso({ dispatch, commit}){\r\n    if(localStorage.getItem('access_token')){\r\n      this.$myApi.get(accesPermissionsByUserTokenUrl)\r\n        .then(response => {\r\n          dispatch('retrieveRolForUser',response.data.role_id)\r\n          commit('retrieveAcceso', response.data.rolePermission)\r\n        });\r\n    }\r\n  },\r\n  retrieveRolForUser(context,roleId){\r\n    localStorage.setItem('role_id', roleId)\r\n    context.commit('retrieveRolForUser', roleId)\r\n  },\r\n  hasThisPermission(context, permission){\r\n    return new Promise((resolve, reject) => {\r\n      this.$myApi.post(hasThisPermissionUrl ,{\r\n        namePermission: permission,\r\n        })\r\n        .then(response => {\r\n          // console.log(response)\r\n          resolve(response.data.hasPermission)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n          reject(error)\r\n        })\r\n      }\r\n    )}\r\n}\r\n\r\nexport default{\r\n    state, getters, mutations, actions\r\n  }\r\n  "]}]}