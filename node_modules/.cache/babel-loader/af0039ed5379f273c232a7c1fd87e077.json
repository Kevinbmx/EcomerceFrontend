{"remainingRequest":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\node_modules\\babel-loader\\lib\\index.js!D:\\kevin\\proyectos\\vue\\trovare_frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\kevin\\proyectos\\vue\\trovare_frontend\\src\\store\\modules\\admin\\category.js","dependencies":[{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\src\\store\\modules\\admin\\category.js","mtime":1554565614436},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _Promise from \"D:\\\\kevin\\\\proyectos\\\\vue\\\\trovare_frontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es7.promise.finally\";\nimport axios from 'axios';\nimport * as firebase from 'firebase';\nimport { categoryUrl, addParent, imagenNoDisponibleUrl } from '../../../packages/config';\nvar state = {\n  categories: [],\n  checkedCategories: [],\n  firstParentId: '',\n  isCorrect: true,\n  image: {\n    file: '',\n    categoryId: '',\n    uuid: '',\n    path: '',\n    pathName: '',\n    oldPathName: '',\n    state: 'new'\n  },\n  userFirebase: 'kevi3195@gmail.com',\n  passFirebase: 'secret!123'\n};\nvar getters = {\n  getCategory: function getCategory(state) {\n    return state.categories;\n  },\n  getsize: function getsize() {\n    return state.checkedCategories.length;\n  },\n  esCorrecto: function esCorrecto() {\n    return state.isCorrect;\n  },\n  getImage: function getImage(state) {\n    return state.image;\n  }\n};\nvar mutations = {\n  retrieveCategory: function retrieveCategory(state, allCategory) {\n    state.categories = allCategory;\n  },\n  checkedCategory: function checkedCategory(state, idCategory) {\n    state.checkedCategories.push(idCategory);\n    state.firstParentId = idCategory.parent_id;\n  },\n  unCheckedCategory: function unCheckedCategory(state, idCategory) {\n    var index = state.checkedCategories.findIndex(function (item) {\n      return item.id == idCategory;\n    }); // console.log('index: ', index)\n\n    if (index >= 0) {\n      state.checkedCategories.splice(index, 1);\n    }\n\n    if (state.checkedCategories.length == 0) {\n      state.firstParentId = '';\n    }\n  },\n  addCategorySubmit: function addCategorySubmit(state, Categories) {\n    state.categories = Categories;\n  },\n  addParentSubmit: function addParentSubmit(state, Categories) {\n    state.categories = Categories;\n    state.checkedCategories = [];\n    state.firstParentId = '';\n  },\n  addChildrenSubmit: function addChildrenSubmit(state, Categories) {\n    state.categories = Categories;\n    state.checkedCategories = [];\n    state.firstParentId = '';\n  },\n  deleteCategory: function deleteCategory(state, Categories) {\n    // const index = state.categories.findIndex(item => item.id == idCategory)\n    // if(index >= 0){\n    //   state.categories.splice(index, 1)\n    //   state.checkedCategories=[]\n    // }\n    state.categories = Categories;\n    state.checkedCategories = [];\n    state.firstParentId = '';\n  },\n  getImageCategory: function getImageCategory(state, objCharacteristic) {\n    state.image = objCharacteristic;\n  },\n  stateOdCorrect: function stateOdCorrect(state) {\n    state.isCorrect = !state.isCorrect;\n  },\n  putImageCategory: function putImageCategory(state, response) {\n    if (state.image.state == 'old') {\n      state.image.oldPathName = state.image.pathName;\n      state.image.state = 'update';\n    }\n\n    state.image.file = response.file;\n    state.image.path = response.path;\n    state.image.pathName = '';\n    state.image.uuid = response.uuid;\n  },\n  uploadImageFirebase: function uploadImageFirebase(state, objImageForFirebase) {\n    state.image.path = objImageForFirebase.urlFirebase;\n    state.image.pathName = objImageForFirebase.name;\n  }\n};\nvar actions = {\n  retrieveCategory: function retrieveCategory(context) {\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\n    axios.get(categoryUrl).then(function (response) {\n      console.log(response.data);\n      context.commit('retrieveCategory', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  checkedCategory: function checkedCategory(context, id) {\n    return new _Promise(function (resolve, reject) {\n      axios.get(categoryUrl + '/' + id).then(function (response) {\n        if (state.checkedCategories.length < 1) {\n          context.commit('checkedCategory', response.data);\n        } else {\n          if (state.firstParentId === response.data.parent_id) {\n            context.commit('checkedCategory', response.data);\n            resolve(response);\n          } else {\n            resolve(false);\n          }\n        }\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n      });\n    }); // context.commit('checkedCategory', id)\n  },\n  verifyCheckCategory: function verifyCheckCategory() {},\n  unCheckedCategory: function unCheckedCategory(context, id) {\n    context.commit('unCheckedCategory', id);\n  },\n  addCategorySubmit: function addCategorySubmit(context, data) {\n    axios.post(categoryUrl, {\n      name: data.name,\n      parent_id: data.parent_id,\n      path: imagenNoDisponibleUrl\n    }).then(function (response) {\n      context.commit('addCategorySubmit', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  addParentSubmit: function addParentSubmit(context, data) {\n    var checkedCategories = context.state.checkedCategories;\n    var parent_id = state.firstParentId; // console.log(checkedCategories)\n\n    axios.post(addParent, {\n      checkedCategories: checkedCategories,\n      name: data.name,\n      parent_id: parent_id\n    }).then(function (response) {\n      // console.log(response)\n      context.commit('addParentSubmit', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  addChildrenSubmit: function addChildrenSubmit(context, data) {\n    var checkedCategories = context.state.checkedCategories; // console.log(checkedCategories)\n\n    axios.post(categoryUrl, {\n      name: data.name,\n      parent_id: checkedCategories[0].id\n    }).then(function (response) {\n      // console.log(response)\n      context.commit('addChildrenSubmit', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  deleteCategory: function deleteCategory(context) {\n    var checkedCategories = context.state.checkedCategories;\n    axios.delete(categoryUrl + '/' + checkedCategories[0].id).then(function (response) {\n      context.commit('deleteCategory', response.data);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  getImageCategory: function getImageCategory(context) {\n    var checkedCategories = context.state.checkedCategories;\n    axios.get(categoryUrl + '/' + checkedCategories[0].id).then(function (response) {\n      var element = response.data;\n      var path = element.path;\n      var pathName = element.pathName;\n      var estado = 'old';\n\n      if (path == null && pathName == null) {\n        path = '';\n        pathName = '';\n        estado = 'new';\n      }\n\n      var obj = {\n        categoryId: element.id,\n        uuid: '',\n        path: path,\n        oldPathName: '',\n        pathName: pathName,\n        state: estado\n      };\n      console.log(response.data);\n      context.commit('getImageCategory', obj);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  },\n  putImageCategory: function putImageCategory(context, object) {\n    context.commit('putImageCategory', object);\n  },\n  createImageCategory: function createImageCategory(context) {\n    if (state.image.state == 'new' || state.image.state == 'update') {\n      if (state.image.state == 'update') {\n        firebase.auth().signInWithEmailAndPassword(state.userFirebase, state.passFirebase).then(function (user) {\n          var storage = firebase.storage();\n          var storageRef = storage.ref();\n          var desertRef = storageRef.child('/category/' + state.image.oldPathName);\n          desertRef.delete().then(function () {\n            console.log('se elimino correctamente de firebase su imagen');\n          }).catch(function (error) {// Uh-oh, an error occurred!\n          });\n        });\n      }\n\n      context.dispatch('uploadImageCategoryFirebase').then(function (response) {\n        if (response) {\n          axios.post(categoryUrl + '/' + state.image.categoryId, {\n            name: state.image.name,\n            path: state.image.path,\n            pathName: state.image.pathName\n          }).then(function (response) {\n            console.log('inserto la imagen de la categoria'); // context.commit('createImageCategory')\n          });\n        }\n      });\n    } else {\n      return;\n    }\n  },\n  uploadImageCategoryFirebase: function uploadImageCategoryFirebase(context) {\n    return new _Promise(function (resolve, reject) {\n      var element = state.image;\n      var uuid = element.uuid; // console.log('element', element)\n      // console.log('uuid', uuid)\n      // console.log(state.files[index])\n\n      firebase.auth().signInWithEmailAndPassword(state.userFirebase, state.passFirebase).then(function (user) {\n        var storageRef = firebase.storage().ref();\n        var metadata = {\n          contentType: element.file[0].type\n        };\n        var filename = element.file[0].name;\n        var ext = filename.slice(filename.lastIndexOf('.'));\n        var uploadTask = storageRef.child('category/' + uuid + ext).put(element.file[0], metadata);\n        uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, function (snapshot) {\n          var progress = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n          console.log('Upload is ' + progress + '% done');\n\n          switch (snapshot.state) {\n            case firebase.storage.TaskState.PAUSED:\n              console.log('Upload is paused');\n              break;\n\n            case firebase.storage.TaskState.RUNNING:\n              console.log('Upload is running');\n              break;\n          }\n        }, function (error) {\n          switch (error.code) {\n            case 'storage/unauthorized':\n              // User doesn't have permission to access the object\n              break;\n\n            case 'storage/canceled':\n              // User canceled the upload\n              break;\n\n            case 'storage/unknown':\n              // Unknown error occurred, inspect error.serverResponse\n              break;\n          }\n        }, function complete() {\n          // Upload completed successfully, now we can get the download URL\n          uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n            var objectFile = {\n              name: uuid + ext,\n              urlFirebase: downloadURL // //   console.log('tama;o Imagen', state.maxUploadImage-1)\n\n            };\n            context.commit('uploadImageFirebase', objectFile);\n            console.log('File available at', downloadURL);\n            resolve(true);\n          });\n        });\n      });\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["D:\\kevin\\proyectos\\vue\\trovare_frontend\\src\\store\\modules\\admin\\category.js"],"names":["axios","firebase","categoryUrl","addParent","imagenNoDisponibleUrl","state","categories","checkedCategories","firstParentId","isCorrect","image","file","categoryId","uuid","path","pathName","oldPathName","userFirebase","passFirebase","getters","getCategory","getsize","length","esCorrecto","getImage","mutations","retrieveCategory","allCategory","checkedCategory","idCategory","push","parent_id","unCheckedCategory","index","findIndex","item","id","splice","addCategorySubmit","Categories","addParentSubmit","addChildrenSubmit","deleteCategory","getImageCategory","objCharacteristic","stateOdCorrect","putImageCategory","response","uploadImageFirebase","objImageForFirebase","urlFirebase","name","actions","context","get","then","console","log","data","commit","catch","error","resolve","reject","verifyCheckCategory","post","delete","element","estado","obj","object","createImageCategory","auth","signInWithEmailAndPassword","user","storage","storageRef","ref","desertRef","child","dispatch","uploadImageCategoryFirebase","metadata","contentType","type","filename","ext","slice","lastIndexOf","uploadTask","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","PAUSED","RUNNING","code","complete","getDownloadURL","downloadURL","objectFile"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,UAA1B;AACA,SAAQC,WAAR,EAAoBC,SAApB,EAA8BC,qBAA9B,QAA0D,0BAA1D;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,UAAU,EAAE,EADA;AAEZC,EAAAA,iBAAiB,EAAC,EAFN;AAGZC,EAAAA,aAAa,EAAC,EAHF;AAIZC,EAAAA,SAAS,EAAG,IAJA;AAKZC,EAAAA,KAAK,EAAC;AACJC,IAAAA,IAAI,EAAC,EADD;AAEJC,IAAAA,UAAU,EAAC,EAFP;AAGJC,IAAAA,IAAI,EAAC,EAHD;AAIJC,IAAAA,IAAI,EAAC,EAJD;AAKJC,IAAAA,QAAQ,EAAC,EALL;AAMJC,IAAAA,WAAW,EAAC,EANR;AAOJX,IAAAA,KAAK,EAAC;AAPF,GALM;AAcZY,EAAAA,YAAY,EAAC,oBAdD;AAeZC,EAAAA,YAAY,EAAC;AAfD,CAAd;AAkBA,IAAMC,OAAO,GAAC;AACZC,EAAAA,WADY,uBACAf,KADA,EACO;AACjB,WAAOA,KAAK,CAACC,UAAb;AACD,GAHW;AAKZe,EAAAA,OALY,qBAKH;AACP,WAAOhB,KAAK,CAACE,iBAAN,CAAwBe,MAA/B;AACD,GAPW;AAQZC,EAAAA,UARY,wBAQA;AACV,WAAOlB,KAAK,CAACI,SAAb;AACD,GAVW;AAWZe,EAAAA,QAAQ,EAAE,kBAAAnB,KAAK,EAAI;AACjB,WAAOA,KAAK,CAACK,KAAb;AACD;AAbW,CAAd;AAgBA,IAAMe,SAAS,GAAG;AAChBC,EAAAA,gBADgB,4BACCrB,KADD,EACQsB,WADR,EACqB;AACnCtB,IAAAA,KAAK,CAACC,UAAN,GAAmBqB,WAAnB;AACD,GAHe;AAKhBC,EAAAA,eALgB,2BAKAvB,KALA,EAKMwB,UALN,EAKiB;AAC/BxB,IAAAA,KAAK,CAACE,iBAAN,CAAwBuB,IAAxB,CACGD,UADH;AAGAxB,IAAAA,KAAK,CAACG,aAAN,GAAsBqB,UAAU,CAACE,SAAjC;AACD,GAVe;AAYhBC,EAAAA,iBAZgB,6BAYE3B,KAZF,EAYSwB,UAZT,EAYoB;AAClC,QAAMI,KAAK,GAAG5B,KAAK,CAACE,iBAAN,CAAwB2B,SAAxB,CAAkC,UAAAC,IAAI;AAAA,aAAKA,IAAI,CAACC,EAAL,IAAWP,UAAhB;AAAA,KAAtC,CAAd,CADkC,CAElC;;AACA,QAAGI,KAAK,IAAI,CAAZ,EAAc;AACZ5B,MAAAA,KAAK,CAACE,iBAAN,CAAwB8B,MAAxB,CAA+BJ,KAA/B,EAAsC,CAAtC;AACD;;AACD,QAAG5B,KAAK,CAACE,iBAAN,CAAwBe,MAAxB,IAAgC,CAAnC,EAAqC;AACnCjB,MAAAA,KAAK,CAACG,aAAN,GAAsB,EAAtB;AACD;AACF,GArBe;AAuBhB8B,EAAAA,iBAvBgB,6BAuBEjC,KAvBF,EAuBSkC,UAvBT,EAuBoB;AAClClC,IAAAA,KAAK,CAACC,UAAN,GAAmBiC,UAAnB;AACH,GAzBiB;AA2BhBC,EAAAA,eA3BgB,2BA2BAnC,KA3BA,EA2BOkC,UA3BP,EA2BkB;AAChClC,IAAAA,KAAK,CAACC,UAAN,GAAmBiC,UAAnB;AACAlC,IAAAA,KAAK,CAACE,iBAAN,GAA0B,EAA1B;AACAF,IAAAA,KAAK,CAACG,aAAN,GAAsB,EAAtB;AACD,GA/Be;AAiChBiC,EAAAA,iBAjCgB,6BAiCEpC,KAjCF,EAiCSkC,UAjCT,EAiCoB;AAClClC,IAAAA,KAAK,CAACC,UAAN,GAAmBiC,UAAnB;AACAlC,IAAAA,KAAK,CAACE,iBAAN,GAA0B,EAA1B;AACAF,IAAAA,KAAK,CAACG,aAAN,GAAsB,EAAtB;AACD,GArCe;AAuChBkC,EAAAA,cAvCgB,0BAuCDrC,KAvCC,EAuCMkC,UAvCN,EAuCiB;AAC/B;AACA;AACA;AACA;AACA;AACAlC,IAAAA,KAAK,CAACC,UAAN,GAAmBiC,UAAnB;AACAlC,IAAAA,KAAK,CAACE,iBAAN,GAA0B,EAA1B;AACAF,IAAAA,KAAK,CAACG,aAAN,GAAsB,EAAtB;AACD,GAhDe;AAiDhBmC,EAAAA,gBAjDgB,4BAiDCtC,KAjDD,EAiDOuC,iBAjDP,EAiDyB;AACvCvC,IAAAA,KAAK,CAACK,KAAN,GAAckC,iBAAd;AACD,GAnDe;AAoDhBC,EAAAA,cApDgB,0BAoDDxC,KApDC,EAoDK;AACnBA,IAAAA,KAAK,CAACI,SAAN,GAAkB,CAACJ,KAAK,CAACI,SAAzB;AACD,GAtDe;AAuDhBqC,EAAAA,gBAvDgB,4BAuDCzC,KAvDD,EAuDO0C,QAvDP,EAuDgB;AAEhC,QAAG1C,KAAK,CAACK,KAAN,CAAYL,KAAZ,IAAqB,KAAxB,EAA8B;AAC5BA,MAAAA,KAAK,CAACK,KAAN,CAAYM,WAAZ,GAA0BX,KAAK,CAACK,KAAN,CAAYK,QAAtC;AACAV,MAAAA,KAAK,CAACK,KAAN,CAAYL,KAAZ,GAAoB,QAApB;AACD;;AACDA,IAAAA,KAAK,CAACK,KAAN,CAAYC,IAAZ,GAAmBoC,QAAQ,CAACpC,IAA5B;AACAN,IAAAA,KAAK,CAACK,KAAN,CAAYI,IAAZ,GAAmBiC,QAAQ,CAACjC,IAA5B;AACAT,IAAAA,KAAK,CAACK,KAAN,CAAYK,QAAZ,GAAuB,EAAvB;AACAV,IAAAA,KAAK,CAACK,KAAN,CAAYG,IAAZ,GAAmBkC,QAAQ,CAAClC,IAA5B;AACD,GAjEiB;AAkElBmC,EAAAA,mBAlEkB,+BAkEE3C,KAlEF,EAkEQ4C,mBAlER,EAkE4B;AAC5C5C,IAAAA,KAAK,CAACK,KAAN,CAAYI,IAAZ,GAAmBmC,mBAAmB,CAACC,WAAvC;AACA7C,IAAAA,KAAK,CAACK,KAAN,CAAYK,QAAZ,GAAuBkC,mBAAmB,CAACE,IAA3C;AACD;AArEiB,CAAlB;AAwEA,IAAMC,OAAO,GAAG;AACZ1B,EAAAA,gBADY,4BACM2B,OADN,EACc;AAC1B;AACErD,IAAAA,KAAK,CAACsD,GAAN,CAAUpD,WAAV,EACGqD,IADH,CACQ,UAAAR,QAAQ,EAAI;AAChBS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,IAArB;AACAL,MAAAA,OAAO,CAACM,MAAR,CAAe,kBAAf,EAAmCZ,QAAQ,CAACW,IAA5C;AACD,KAJH,EAKGE,KALH,CAKS,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAPH;AAQD,GAXW;AAaZjC,EAAAA,eAbY,2BAaIyB,OAbJ,EAaYjB,EAbZ,EAae;AACzB,WAAO,aAAY,UAAC0B,OAAD,EAAUC,MAAV,EAAqB;AACtC/D,MAAAA,KAAK,CAACsD,GAAN,CAAUpD,WAAW,GAAE,GAAb,GAAiBkC,EAA3B,EACCmB,IADD,CACM,UAAAR,QAAQ,EAAE;AACd,YAAI1C,KAAK,CAACE,iBAAN,CAAwBe,MAAxB,GAAgC,CAApC,EAAsC;AACpC+B,UAAAA,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAkCZ,QAAQ,CAACW,IAA3C;AACD,SAFD,MAGI;AACF,cAAGrD,KAAK,CAACG,aAAN,KAAwBuC,QAAQ,CAACW,IAAT,CAAc3B,SAAzC,EAAmD;AACjDsB,YAAAA,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAkCZ,QAAQ,CAACW,IAA3C;AACAI,YAAAA,OAAO,CAACf,QAAD,CAAP;AACD,WAHD,MAGK;AACHe,YAAAA,OAAO,CAAC,KAAD,CAAP;AACD;AACF;AACF,OAbD,EAcCF,KAdD,CAcO,UAAAC,KAAK,EAAG;AACbL,QAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACAE,QAAAA,MAAM,CAACF,KAAD,CAAN;AACD,OAjBD;AAkBD,KAnBM,CAAP,CADyB,CAqBzB;AACD,GAnCW;AAqCZG,EAAAA,mBArCY,iCAqCS,CAEpB,CAvCW;AAyCZhC,EAAAA,iBAzCY,6BAyCMqB,OAzCN,EAyCejB,EAzCf,EAyCmB;AAC7BiB,IAAAA,OAAO,CAACM,MAAR,CAAe,mBAAf,EAAoCvB,EAApC;AACD,GA3CW;AA6CZE,EAAAA,iBA7CY,6BA6CMe,OA7CN,EA6CcK,IA7Cd,EA6CmB;AAC7B1D,IAAAA,KAAK,CAACiE,IAAN,CAAW/D,WAAX,EAAwB;AACtBiD,MAAAA,IAAI,EAAEO,IAAI,CAACP,IADW;AAEtBpB,MAAAA,SAAS,EAAE2B,IAAI,CAAC3B,SAFM;AAGtBjB,MAAAA,IAAI,EAACV;AAHiB,KAAxB,EAKCmD,IALD,CAKM,UAAAR,QAAQ,EAAI;AAChBM,MAAAA,OAAO,CAACM,MAAR,CAAe,mBAAf,EAAoCZ,QAAQ,CAACW,IAA7C;AACD,KAPD,EAQCE,KARD,CAQO,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAVD;AAWD,GAzDW;AA2DZrB,EAAAA,eA3DY,2BA2DIa,OA3DJ,EA2DaK,IA3Db,EA2DkB;AAC5B,QAAMnD,iBAAiB,GAAG8C,OAAO,CAAChD,KAAR,CAAcE,iBAAxC;AACA,QAAMwB,SAAS,GAAG1B,KAAK,CAACG,aAAxB,CAF4B,CAG5B;;AACAR,IAAAA,KAAK,CAACiE,IAAN,CAAW9D,SAAX,EACA;AACII,MAAAA,iBAAiB,EAAEA,iBADvB;AAEI4C,MAAAA,IAAI,EAAEO,IAAI,CAACP,IAFf;AAGIpB,MAAAA,SAAS,EAACA;AAHd,KADA,EAMGwB,IANH,CAMQ,UAAAR,QAAQ,EAAI;AAChB;AACAM,MAAAA,OAAO,CAACM,MAAR,CAAe,iBAAf,EAAiCZ,QAAQ,CAACW,IAA1C;AACD,KATH,EAUGE,KAVH,CAUS,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAZH;AAaD,GA5EW;AA8EZpB,EAAAA,iBA9EY,6BA8EMY,OA9EN,EA8EeK,IA9Ef,EA8EoB;AAC9B,QAAMnD,iBAAiB,GAAG8C,OAAO,CAAChD,KAAR,CAAcE,iBAAxC,CAD8B,CAE9B;;AACAP,IAAAA,KAAK,CAACiE,IAAN,CAAW/D,WAAX,EACA;AACIiD,MAAAA,IAAI,EAAEO,IAAI,CAACP,IADf;AAEIpB,MAAAA,SAAS,EAACxB,iBAAiB,CAAC,CAAD,CAAjB,CAAqB6B;AAFnC,KADA,EAKGmB,IALH,CAKQ,UAAAR,QAAQ,EAAI;AAChB;AACAM,MAAAA,OAAO,CAACM,MAAR,CAAe,mBAAf,EAAmCZ,QAAQ,CAACW,IAA5C;AACD,KARH,EASGE,KATH,CASS,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAXH;AAYD,GA7FW;AA+FZnB,EAAAA,cA/FY,0BA+FGW,OA/FH,EA+FW;AACrB,QAAM9C,iBAAiB,GAAG8C,OAAO,CAAChD,KAAR,CAAcE,iBAAxC;AACAP,IAAAA,KAAK,CAACkE,MAAN,CAAahE,WAAW,GAAE,GAAb,GAAkBK,iBAAiB,CAAC,CAAD,CAAjB,CAAqB6B,EAApD,EACGmB,IADH,CACQ,UAAAR,QAAQ,EAAI;AAChBM,MAAAA,OAAO,CAACM,MAAR,CAAe,gBAAf,EAAiCZ,QAAQ,CAACW,IAA1C;AACD,KAHH,EAIGE,KAJH,CAIS,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KANH;AAOD,GAxGW;AAyGZlB,EAAAA,gBAzGY,4BAyGKU,OAzGL,EAyGa;AACvB,QAAM9C,iBAAiB,GAAG8C,OAAO,CAAChD,KAAR,CAAcE,iBAAxC;AACAP,IAAAA,KAAK,CAACsD,GAAN,CAAUpD,WAAW,GAAC,GAAZ,GAAgBK,iBAAiB,CAAC,CAAD,CAAjB,CAAqB6B,EAA/C,EACCmB,IADD,CACM,UAAAR,QAAQ,EAAG;AACf,UAAIoB,OAAO,GAAGpB,QAAQ,CAACW,IAAvB;AACA,UAAI5C,IAAI,GAAEqD,OAAO,CAACrD,IAAlB;AACA,UAAIC,QAAQ,GAAGoD,OAAO,CAACpD,QAAvB;AACA,UAAIqD,MAAM,GAAG,KAAb;;AACA,UAAGtD,IAAI,IAAE,IAAN,IAAcC,QAAQ,IAAE,IAA3B,EAAgC;AAC9BD,QAAAA,IAAI,GAAG,EAAP;AACAC,QAAAA,QAAQ,GAAC,EAAT;AACAqD,QAAAA,MAAM,GAAG,KAAT;AACD;;AACD,UAAIC,GAAG,GAAE;AACPzD,QAAAA,UAAU,EAACuD,OAAO,CAAC/B,EADZ;AAEPvB,QAAAA,IAAI,EAAC,EAFE;AAGPC,QAAAA,IAAI,EAACA,IAHE;AAIPE,QAAAA,WAAW,EAAC,EAJL;AAKPD,QAAAA,QAAQ,EAACA,QALF;AAMPV,QAAAA,KAAK,EAAC+D;AANC,OAAT;AAQAZ,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAQ,CAACW,IAArB;AACAL,MAAAA,OAAO,CAACM,MAAR,CAAe,kBAAf,EAAkCU,GAAlC;AACD,KArBD,EAsBCT,KAtBD,CAsBO,UAAAC,KAAK,EAAI;AACdL,MAAAA,OAAO,CAACC,GAAR,CAAYI,KAAZ;AACD,KAxBD;AAyBD,GApIW;AAqIZf,EAAAA,gBArIY,4BAqIKO,OArIL,EAqIaiB,MArIb,EAqIoB;AAC9BjB,IAAAA,OAAO,CAACM,MAAR,CAAe,kBAAf,EAAkCW,MAAlC;AACD,GAvIW;AAwIZC,EAAAA,mBAxIY,+BAwIQlB,OAxIR,EAwIgB;AAC1B,QAAGhD,KAAK,CAACK,KAAN,CAAYL,KAAZ,IAAmB,KAAnB,IAA4BA,KAAK,CAACK,KAAN,CAAYL,KAAZ,IAAmB,QAAlD,EAA2D;AACzD,UAAGA,KAAK,CAACK,KAAN,CAAYL,KAAZ,IAAmB,QAAtB,EAA+B;AAC7BJ,QAAAA,QAAQ,CAACuE,IAAT,GAAgBC,0BAAhB,CAA2CpE,KAAK,CAACY,YAAjD,EAA8DZ,KAAK,CAACa,YAApE,EACDqC,IADC,CACI,UAAAmB,IAAI,EAAI;AACZ,cAAIC,OAAO,GAAG1E,QAAQ,CAAC0E,OAAT,EAAd;AACA,cAAIC,UAAU,GAAGD,OAAO,CAACE,GAAR,EAAjB;AACA,cAAIC,SAAS,GAAGF,UAAU,CAACG,KAAX,CAAiB,eAAa1E,KAAK,CAACK,KAAN,CAAYM,WAA1C,CAAhB;AACA8D,UAAAA,SAAS,CAACZ,MAAV,GAAmBX,IAAnB,CAAwB,YAAW;AAC/BC,YAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACH,WAFD,EAEGG,KAFH,CAES,UAASC,KAAT,EAAgB,CACzB;AACC,WAJD;AAKD,SAVC;AAWH;;AACCR,MAAAA,OAAO,CAAC2B,QAAR,CAAiB,6BAAjB,EAAgDzB,IAAhD,CAAqD,UAACR,QAAD,EAAc;AACjE,YAAGA,QAAH,EAAY;AAEV/C,UAAAA,KAAK,CAACiE,IAAN,CAAW/D,WAAW,GAAE,GAAb,GAAiBG,KAAK,CAACK,KAAN,CAAYE,UAAxC,EAAmD;AACjDuC,YAAAA,IAAI,EAAE9C,KAAK,CAACK,KAAN,CAAYyC,IAD+B;AAEjDrC,YAAAA,IAAI,EAACT,KAAK,CAACK,KAAN,CAAYI,IAFgC;AAGjDC,YAAAA,QAAQ,EAACV,KAAK,CAACK,KAAN,CAAYK;AAH4B,WAAnD,EAIGwC,IAJH,CAIQ,UAAAR,QAAQ,EAAE;AAChBS,YAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ,EADgB,CAEhB;AACD,WAPD;AAQD;AACF,OAZD;AAaD,KA3BD,MA2BM;AACJ;AACD;AAEF,GAxKW;AAyKZwB,EAAAA,2BAzKY,uCAyKgB5B,OAzKhB,EAyKwB;AAClC,WAAO,aAAY,UAACS,OAAD,EAAUC,MAAV,EAAqB;AAChC,UAAMI,OAAO,GAAG9D,KAAK,CAACK,KAAtB;AACA,UAAMG,IAAI,GAAGsD,OAAO,CAACtD,IAArB,CAFgC,CAGhC;AACA;AACA;;AAEAZ,MAAAA,QAAQ,CAACuE,IAAT,GAAgBC,0BAAhB,CAA2CpE,KAAK,CAACY,YAAjD,EAA8DZ,KAAK,CAACa,YAApE,EACCqC,IADD,CACM,UAAAmB,IAAI,EAAI;AACd,YAAIE,UAAU,GAAI3E,QAAQ,CAAC0E,OAAT,GAAmBE,GAAnB,EAAlB;AACI,YAAIK,QAAQ,GAAG;AACfC,UAAAA,WAAW,EAAEhB,OAAO,CAACxD,IAAR,CAAa,CAAb,EAAgByE;AADd,SAAf;AAGA,YAAMC,QAAQ,GAAGlB,OAAO,CAACxD,IAAR,CAAa,CAAb,EAAgBwC,IAAjC;AACA,YAAMmC,GAAG,GAAGD,QAAQ,CAACE,KAAT,CAAeF,QAAQ,CAACG,WAAT,CAAqB,GAArB,CAAf,CAAZ;AACA,YAAIC,UAAU,GAAGb,UAAU,CAACG,KAAX,CAAiB,cAAclE,IAAd,GAAqByE,GAAtC,EAA2CI,GAA3C,CAA+CvB,OAAO,CAACxD,IAAR,CAAa,CAAb,CAA/C,EAAgEuE,QAAhE,CAAjB;AAEAO,QAAAA,UAAU,CAACE,EAAX,CAAc1F,QAAQ,CAAC0E,OAAT,CAAiBiB,SAAjB,CAA2BC,aAAzC,EACA,UAASC,QAAT,EAAmB;AACf,cAAIC,QAAQ,GAAKD,QAAQ,CAACE,gBAAT,GAA4BF,QAAQ,CAACG,UAAtC,GAAoD,GAApE;AACAzC,UAAAA,OAAO,CAACC,GAAR,CAAY,eAAesC,QAAf,GAA0B,QAAtC;;AACA,kBAAQD,QAAQ,CAACzF,KAAjB;AACA,iBAAKJ,QAAQ,CAAC0E,OAAT,CAAiBuB,SAAjB,CAA2BC,MAAhC;AACI3C,cAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA;;AACJ,iBAAKxD,QAAQ,CAAC0E,OAAT,CAAiBuB,SAAjB,CAA2BE,OAAhC;AACI5C,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACA;AANJ;AAQH,SAZD,EAYG,UAASI,KAAT,EAAgB;AACnB,kBAAQA,KAAK,CAACwC,IAAd;AACI,iBAAK,sBAAL;AACA;AACA;;AAEA,iBAAK,kBAAL;AACA;AACA;;AAEA,iBAAK,iBAAL;AACA;AACA;AAXJ;AAaC,SA1BD,EA0BG,SAASC,QAAT,GAAqB;AACxB;AACIb,UAAAA,UAAU,CAACK,QAAX,CAAoBjB,GAApB,CAAwB0B,cAAxB,GAAyChD,IAAzC,CAA8C,UAASiD,WAAT,EAAsB;AAChE,gBAAIC,UAAU,GAAC;AACXtD,cAAAA,IAAI,EAAEtC,IAAI,GAAGyE,GADF;AAEXpC,cAAAA,WAAW,EAACsD,WAFD,CAIf;;AAJe,aAAf;AAMAnD,YAAAA,OAAO,CAACM,MAAR,CAAe,qBAAf,EAAqC8C,UAArC;AACAjD,YAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC+C,WAAjC;AACA1C,YAAAA,OAAO,CAAC,IAAD,CAAP;AACH,WAVD;AAWH,SAvCD;AAwCH,OAlDD;AAmDP,KA1DM,CAAP;AA2DH;AArOa,CAAhB;AAyOA,eAAc;AACZzD,EAAAA,KAAK,EAALA,KADY;AACLc,EAAAA,OAAO,EAAPA,OADK;AACIM,EAAAA,SAAS,EAATA,SADJ;AACe2B,EAAAA,OAAO,EAAPA;AADf,CAAd","sourcesContent":["import axios from 'axios'\r\nimport * as firebase from 'firebase'\r\nimport {categoryUrl,addParent,imagenNoDisponibleUrl} from '../../../packages/config'\r\n\r\nconst state = {\r\n  categories :[],\r\n  checkedCategories:[],\r\n  firstParentId:'',\r\n  isCorrect : true,\r\n  image:{\r\n    file:'',\r\n    categoryId:'',\r\n    uuid:'',\r\n    path:'',\r\n    pathName:'',\r\n    oldPathName:'',\r\n    state:'new'\r\n  },\r\n  userFirebase:'kevi3195@gmail.com',\r\n  passFirebase:'secret!123'\r\n}\r\n\r\nconst getters={\r\n  getCategory(state) {\r\n    return state.categories\r\n  },\r\n\r\n  getsize(){\r\n    return state.checkedCategories.length\r\n  },\r\n  esCorrecto(){\r\n    return state.isCorrect\r\n  },\r\n  getImage: state => {\r\n    return state.image\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  retrieveCategory(state, allCategory) {\r\n    state.categories = allCategory\r\n  },\r\n\r\n  checkedCategory(state,idCategory){\r\n    state.checkedCategories.push(\r\n       idCategory\r\n    )\r\n    state.firstParentId = idCategory.parent_id\r\n  },\r\n\r\n  unCheckedCategory(state, idCategory){\r\n    const index = state.checkedCategories.findIndex(item =>  item.id == idCategory)\r\n    // console.log('index: ', index)\r\n    if(index >= 0){\r\n      state.checkedCategories.splice(index, 1)\r\n    }\r\n    if(state.checkedCategories.length==0){\r\n      state.firstParentId = ''\r\n    }\r\n  },\r\n\r\n  addCategorySubmit(state, Categories){\r\n    state.categories = Categories\r\n},\r\n\r\n  addParentSubmit(state, Categories){\r\n    state.categories = Categories\r\n    state.checkedCategories = []\r\n    state.firstParentId = ''\r\n  },\r\n\r\n  addChildrenSubmit(state, Categories){\r\n    state.categories = Categories\r\n    state.checkedCategories = []\r\n    state.firstParentId = ''\r\n  },\r\n\r\n  deleteCategory(state, Categories){\r\n    // const index = state.categories.findIndex(item => item.id == idCategory)\r\n    // if(index >= 0){\r\n    //   state.categories.splice(index, 1)\r\n    //   state.checkedCategories=[]\r\n    // }\r\n    state.categories = Categories\r\n    state.checkedCategories = []\r\n    state.firstParentId = ''\r\n  },\r\n  getImageCategory(state,objCharacteristic){\r\n    state.image = objCharacteristic\r\n  },\r\n  stateOdCorrect(state){\r\n    state.isCorrect = !state.isCorrect\r\n  },\r\n  putImageCategory(state,response){\r\n    \r\n  if(state.image.state == 'old'){\r\n    state.image.oldPathName = state.image.pathName\r\n    state.image.state = 'update'\r\n  }\r\n  state.image.file = response.file\r\n  state.image.path = response.path\r\n  state.image.pathName = ''\r\n  state.image.uuid = response.uuid\r\n},\r\nuploadImageFirebase(state,objImageForFirebase){\r\n  state.image.path = objImageForFirebase.urlFirebase\r\n  state.image.pathName = objImageForFirebase.name\r\n}\r\n}\r\n\r\nconst actions = {\r\n    retrieveCategory (context){\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n      axios.get(categoryUrl)\r\n        .then(response => {\r\n          console.log(response.data)\r\n          context.commit('retrieveCategory', response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n\r\n    checkedCategory(context,id){\r\n      return new Promise((resolve, reject) => {\r\n        axios.get(categoryUrl +'/'+id)\r\n        .then(response=>{\r\n          if (state.checkedCategories.length <1){\r\n            context.commit('checkedCategory', response.data)\r\n          }\r\n          else{\r\n            if(state.firstParentId === response.data.parent_id){\r\n              context.commit('checkedCategory', response.data)\r\n              resolve(response)\r\n            }else{\r\n              resolve(false)\r\n            }\r\n          }\r\n        })\r\n        .catch(error =>{\r\n          console.log(error)\r\n          reject(error)\r\n        })\r\n      })\r\n      // context.commit('checkedCategory', id)\r\n    },\r\n\r\n    verifyCheckCategory(){\r\n\r\n    },\r\n\r\n    unCheckedCategory(context, id) {\r\n      context.commit('unCheckedCategory', id)\r\n    },\r\n\r\n    addCategorySubmit(context,data){\r\n      axios.post(categoryUrl, {\r\n        name: data.name,\r\n        parent_id: data.parent_id,\r\n        path:imagenNoDisponibleUrl\r\n      })\r\n      .then(response => {\r\n        context.commit('addCategorySubmit', response.data)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    },\r\n\r\n    addParentSubmit(context, data){\r\n      const checkedCategories = context.state.checkedCategories\r\n      const parent_id = state.firstParentId\r\n      // console.log(checkedCategories)\r\n      axios.post(addParent,\r\n      {\r\n          checkedCategories: checkedCategories,\r\n          name: data.name,\r\n          parent_id:parent_id,\r\n      })\r\n        .then(response => {\r\n          // console.log(response)\r\n          context.commit('addParentSubmit',response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n\r\n    addChildrenSubmit(context, data){\r\n      const checkedCategories = context.state.checkedCategories\r\n      // console.log(checkedCategories)\r\n      axios.post(categoryUrl,\r\n      {\r\n          name: data.name,\r\n          parent_id:checkedCategories[0].id,\r\n      })\r\n        .then(response => {\r\n          // console.log(response)\r\n          context.commit('addChildrenSubmit',response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n\r\n    deleteCategory(context){\r\n      const checkedCategories = context.state.checkedCategories\r\n      axios.delete(categoryUrl +'/'+ checkedCategories[0].id)\r\n        .then(response => {\r\n          context.commit('deleteCategory', response.data)\r\n        })\r\n        .catch(error => {\r\n          console.log(error)\r\n        })\r\n    },\r\n    getImageCategory(context){\r\n      const checkedCategories = context.state.checkedCategories\r\n      axios.get(categoryUrl+'/'+checkedCategories[0].id)\r\n      .then(response =>{\r\n        var element = response.data\r\n        var path =element.path\r\n        var pathName = element.pathName\r\n        var estado = 'old'\r\n        if(path==null && pathName==null){\r\n          path = ''\r\n          pathName=''\r\n          estado = 'new'\r\n        }\r\n        let obj ={\r\n          categoryId:element.id,\r\n          uuid:'',\r\n          path:path,\r\n          oldPathName:'',\r\n          pathName:pathName,\r\n          state:estado\r\n        }\r\n        console.log(response.data)\r\n        context.commit('getImageCategory',obj)\r\n      })\r\n      .catch(error => {\r\n        console.log(error)\r\n      })\r\n    },\r\n    putImageCategory(context,object){\r\n      context.commit('putImageCategory',object)  \r\n    },\r\n    createImageCategory(context){\r\n      if(state.image.state=='new' || state.image.state=='update'){\r\n        if(state.image.state=='update'){\r\n          firebase.auth().signInWithEmailAndPassword(state.userFirebase,state.passFirebase)\r\n        .then(user => {\r\n          var storage = firebase.storage();\r\n          var storageRef = storage.ref();\r\n          var desertRef = storageRef.child('/category/'+state.image.oldPathName);\r\n          desertRef.delete().then(function() {\r\n              console.log('se elimino correctamente de firebase su imagen')\r\n          }).catch(function(error) {\r\n          // Uh-oh, an error occurred!\r\n          });\r\n        })\r\n      }\r\n        context.dispatch('uploadImageCategoryFirebase').then((response) => {\r\n          if(response){\r\n            \r\n            axios.post(categoryUrl +'/'+state.image.categoryId,{\r\n              name: state.image.name,\r\n              path:state.image.path,\r\n              pathName:state.image.pathName\r\n            }).then(response=>{\r\n              console.log('inserto la imagen de la categoria')\r\n              // context.commit('createImageCategory')\r\n            })\r\n          }\r\n        })\r\n      }else {\r\n        return  \r\n      }\r\n\r\n    },\r\n    uploadImageCategoryFirebase(context){\r\n      return new Promise((resolve, reject) => {\r\n              const element = state.image;\r\n              const uuid = element.uuid ;\r\n              // console.log('element', element)\r\n              // console.log('uuid', uuid)\r\n              // console.log(state.files[index])\r\n  \r\n              firebase.auth().signInWithEmailAndPassword(state.userFirebase,state.passFirebase)\r\n              .then(user => {\r\n              var storageRef =  firebase.storage().ref();\r\n                  var metadata = {\r\n                  contentType: element.file[0].type\r\n                  }\r\n                  const filename = element.file[0].name\r\n                  const ext = filename.slice(filename.lastIndexOf('.'))\r\n                  var uploadTask = storageRef.child('category/' + uuid + ext).put(element.file[0], metadata);\r\n\r\n                  uploadTask.on(firebase.storage.TaskEvent.STATE_CHANGED, \r\n                  function(snapshot) {\r\n                      var progress =  (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                      console.log('Upload is ' + progress + '% done');\r\n                      switch (snapshot.state) {\r\n                      case firebase.storage.TaskState.PAUSED: \r\n                          console.log('Upload is paused');\r\n                          break;\r\n                      case firebase.storage.TaskState.RUNNING: \r\n                          console.log('Upload is running');\r\n                          break;\r\n                      }\r\n                  }, function(error) {\r\n                  switch (error.code) {\r\n                      case 'storage/unauthorized':\r\n                      // User doesn't have permission to access the object\r\n                      break;\r\n\r\n                      case 'storage/canceled':\r\n                      // User canceled the upload\r\n                      break;\r\n\r\n                      case 'storage/unknown':\r\n                      // Unknown error occurred, inspect error.serverResponse\r\n                      break;\r\n                  }\r\n                  }, function complete () {\r\n                  // Upload completed successfully, now we can get the download URL\r\n                      uploadTask.snapshot.ref.getDownloadURL().then(function(downloadURL) {\r\n                          let objectFile={\r\n                              name: uuid + ext,\r\n                              urlFirebase:downloadURL\r\n                          }\r\n                          // //   console.log('tama;o Imagen', state.maxUploadImage-1)\r\n                          \r\n                          context.commit('uploadImageFirebase',objectFile)\r\n                          console.log('File available at', downloadURL);\r\n                          resolve(true)\r\n                      });\r\n                  })\r\n              })\r\n      })\r\n  },\r\n}\r\n\r\n\r\nexport default{\r\n  state, getters, mutations, actions\r\n}\r\n"]}]}