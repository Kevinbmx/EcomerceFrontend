{"remainingRequest":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\util\\index.js","dependencies":[{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\util\\index.js","mtime":1553870447735},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.replace\";\n\n// export function camel (str) {\n//   const camel = (str || '').replace(/-([^-])/g, g => g[1].toUpperCase());\n//   return capitalize(camel);\n// }\n// export function camelActual (str) {\n//   return (str || '').replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n// }\n// export function kebab (str) {\n//   return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n// }\n// export function capitalize (str) {\n//   str = str || '';\n//   return `${str.substr(0, 1).toUpperCase()}${str.slice(1)}`;\n// }\n// export function findProduct (store, id) {\n//   return store.state.store.products.find(p => p.id === id);\n// }\n// export function isOnSale (variants) {\n//   return variants.some(variant => {\n//     return parseFloat(variant.price) < parseFloat(variant.compareAtPrice);\n//   });\n// }\n// export function randomNumber (min, max) {\n//   return Math.floor(Math.random() * max) + min;\n// }\n// export function randomString (length = 5) {\n//   let text = '';\n//   const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n//   for (let i = 0; i < length; i++) {\n//     text += possible.charAt(Math.floor(Math.random() * possible.length));\n//   }\n//   return text;\n// }\nvar randomElement = function randomElement() {\n  var arr = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nvar kebab = function kebab(str) {\n  return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nvar toggleFullScreen = function toggleFullScreen() {\n  var doc = window.document;\n  var docEl = doc.documentElement;\n  var requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\n  var cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\n\n  if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n    requestFullScreen.call(docEl);\n  } else {\n    cancelFullScreen.call(doc);\n  }\n};\n\nexport default {\n  randomElement: randomElement,\n  toggleFullScreen: toggleFullScreen,\n  kebab: kebab\n};",{"version":3,"sources":["D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\util\\index.js"],"names":["randomElement","arr","Math","floor","random","length","kebab","str","replace","toLowerCase","toggleFullScreen","doc","window","document","docEl","documentElement","requestFullScreen","requestFullscreen","mozRequestFullScreen","webkitRequestFullScreen","msRequestFullscreen","cancelFullScreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","msExitFullscreen","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","call"],"mappings":";;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA,IAAMA,aAAa,GAAG,SAAhBA,aAAgB,GAAc;AAAA,MAAbC,GAAa,uEAAP,EAAO;AAClC,SAAOA,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBH,GAAG,CAACI,MAA/B,CAAD,CAAV;AACD,CAFD;;AAIA,IAAMC,KAAK,GAAI,SAATA,KAAS,CAACC,GAAD,EAAS;AACtB,SAAO,CAACA,GAAG,IAAI,EAAR,EAAYC,OAAZ,CAAoB,iBAApB,EAAuC,OAAvC,EAAgDC,WAAhD,EAAP;AACD,CAFD;;AAIA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B,MAAIC,GAAG,GAAGC,MAAM,CAACC,QAAjB;AACA,MAAIC,KAAK,GAAGH,GAAG,CAACI,eAAhB;AAEA,MAAIC,iBAAiB,GAAGF,KAAK,CAACG,iBAAN,IAA2BH,KAAK,CAACI,oBAAjC,IAAyDJ,KAAK,CAACK,uBAA/D,IAA0FL,KAAK,CAACM,mBAAxH;AACA,MAAIC,gBAAgB,GAAGV,GAAG,CAACW,cAAJ,IAAsBX,GAAG,CAACY,mBAA1B,IAAiDZ,GAAG,CAACa,oBAArD,IAA6Eb,GAAG,CAACc,gBAAxG;;AAEA,MAAI,CAACd,GAAG,CAACe,iBAAL,IAA0B,CAACf,GAAG,CAACgB,oBAA/B,IAAuD,CAAChB,GAAG,CAACiB,uBAA5D,IAAuF,CAACjB,GAAG,CAACkB,mBAAhG,EAAqH;AACnHb,IAAAA,iBAAiB,CAACc,IAAlB,CAAuBhB,KAAvB;AACD,GAFD,MAGK;AACHO,IAAAA,gBAAgB,CAACS,IAAjB,CAAsBnB,GAAtB;AACD;AACF,CAbD;;AAeA,eAAe;AACbX,EAAAA,aAAa,EAAbA,aADa;AAEbU,EAAAA,gBAAgB,EAAhBA,gBAFa;AAGbJ,EAAAA,KAAK,EAALA;AAHa,CAAf","sourcesContent":["\n// export function camel (str) {\n//   const camel = (str || '').replace(/-([^-])/g, g => g[1].toUpperCase());\n\n//   return capitalize(camel);\n// }\n\n// export function camelActual (str) {\n//   return (str || '').replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n// }\n\n// export function kebab (str) {\n//   return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n// }\n\n// export function capitalize (str) {\n//   str = str || '';\n\n//   return `${str.substr(0, 1).toUpperCase()}${str.slice(1)}`;\n// }\n\n// export function findProduct (store, id) {\n//   return store.state.store.products.find(p => p.id === id);\n// }\n\n// export function isOnSale (variants) {\n//   return variants.some(variant => {\n//     return parseFloat(variant.price) < parseFloat(variant.compareAtPrice);\n//   });\n// }\n\n// export function randomNumber (min, max) {\n//   return Math.floor(Math.random() * max) + min;\n// }\n\n// export function randomString (length = 5) {\n//   let text = '';\n//   const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n//   for (let i = 0; i < length; i++) {\n//     text += possible.charAt(Math.floor(Math.random() * possible.length));\n//   }\n\n//   return text;\n// }\nconst randomElement = (arr = []) => {\n  return arr[Math.floor(Math.random() * arr.length)];\n};\n\nconst kebab =  (str) => {\n  return (str || '').replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();\n};\n\nconst toggleFullScreen = () => {\n  let doc = window.document;\n  let docEl = doc.documentElement;\n\n  let requestFullScreen = docEl.requestFullscreen || docEl.mozRequestFullScreen || docEl.webkitRequestFullScreen || docEl.msRequestFullscreen;\n  let cancelFullScreen = doc.exitFullscreen || doc.mozCancelFullScreen || doc.webkitExitFullscreen || doc.msExitFullscreen;\n\n  if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n    requestFullScreen.call(docEl);\n  }\n  else {\n    cancelFullScreen.call(doc);\n  }\n};\n\nexport default {\n  randomElement,\n  toggleFullScreen,\n  kebab\n};"]}]}