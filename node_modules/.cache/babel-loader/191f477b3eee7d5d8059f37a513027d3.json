{"remainingRequest":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\components\\main\\Toolbar.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\components\\main\\Toolbar.vue","mtime":1591123742674},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1580396457614},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1580396518341},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1580396514635}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport _parseInt from \"D:\\\\kevin\\\\proyectos\\\\vuejs\\\\EcomerceFrontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/parse-int\";\nimport _Promise from \"D:\\\\kevin\\\\proyectos\\\\vuejs\\\\EcomerceFrontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { categoryParentUrl, carritoUrl } from '@/packages/config';\nexport default {\n  data: function data() {\n    return {\n      tabs: null,\n      searchField: '',\n      categories: []\n    };\n  },\n  created: function created() {\n    // if(this.$store.state.auth.token !==null){\n    this.fillCategory();\n    this.fillCarrito(); // }\n  },\n  methods: {\n    fillCategory: function fillCategory() {\n      var _this = this;\n\n      this.$myApi.get(categoryParentUrl).then(function (response) {\n        // console.log('categorias toolbar',response )\n        _this.categories = response.data;\n      });\n    },\n    //esto lo utilizo solo para hacer consulta cuando hay dos carrito distinto \n    getCarritoByPedidoId: function getCarritoByPedidoId(pedido_id) {\n      var _this2 = this;\n\n      return new _Promise(function (resolve, reject) {\n        _this2.$myApi.get(carritoUrl + '/' + pedido_id).then(function (response) {\n          // console.log('carrito ',response)\n          resolve(response.data.carrito); // return response.data.carrito\n        });\n      });\n    },\n    search: function search() {\n      if (this.searchField == null || this.searchField == \"\") {\n        this.$router.push({\n          name: 'mainPage'\n        });\n      } else {\n        this.$router.push({\n          name: 'search',\n          query: {\n            q: this.searchField\n          }\n        });\n      }\n    },\n    fillCarrito: function fillCarrito() {\n      var _this3 = this;\n\n      var pedido_id = localStorage.getItem('pedido_id');\n      var token = localStorage.getItem('access_token');\n\n      if (pedido_id == null && token != null) {\n        this.$store.dispatch('selectPedidoByUserId').then(function (response) {\n          console.log('pedidoId null y toke not null', response);\n\n          if (response !== null) {\n            _this3.$store.dispatch('selectCarritoByPedidoId', response.id).then(function (response) {\n              console.log('carrito ', response);\n            });\n          }\n        });\n      } else if (pedido_id != null && token != null) {\n        this.$store.dispatch('selectPedidoByUserId').then(function (response1) {\n          console.log('pedidoId null y toke not null 1', response1);\n\n          if (response1 !== null) {\n            if (response1.id !== _parseInt(pedido_id)) {\n              //aqui solo ulitizo el metodo getCarritoByPedidoId por que solo quiero el resultado de \n              //ambos carrito para luego hacer una fusion\n              var userCart;\n              var oldCarrito;\n\n              _this3.getCarritoByPedidoId(_parseInt(response1.id)).then(function (responseUser) {\n                userCart = responseUser;\n\n                _this3.getCarritoByPedidoId(_parseInt(pedido_id)).then(function (responseUser) {\n                  oldCarrito = responseUser;\n                  console.log('old carrito', oldCarrito);\n                  console.log('userCart ', userCart);\n\n                  for (var index in oldCarrito) {\n                    var find = userCart.find(function (file) {\n                      return file.product_id !== oldCarrito[index].product_id;\n                    });\n\n                    if (find) {\n                      var objCart = {\n                        product_id: oldCarrito[index].product_id,\n                        pedido_id: find.pedido_id,\n                        quantity: oldCarrito[index].quantity,\n                        price: oldCarrito[index].price\n                      };\n\n                      _this3.$store.dispatch('createAndUpdateCarrito', objCart);\n                    }\n                  }\n\n                  _this3.$store.dispatch('deletePedidoAndCarritoByPedidoId', oldCarrito[index].pedido_id).then(function (responseDelete) {\n                    console.log('se elimino', responseDelete);\n                  });\n                });\n              });\n            } else {\n              _this3.$store.dispatch('selectCarritoByPedidoId', response1.id).then(function (response3) {\n                console.log('carrito ', response3);\n              });\n            }\n          }\n        });\n      } else if (pedido_id != null && token == null) {\n        this.$store.dispatch('selectPedidoById', pedido_id).then(function (response) {\n          console.log('pedidoId not null y toke null 2', response);\n\n          if (response !== null) {\n            // this.$store.commit('selectPedidoByUserId',response)\n            _this3.$store.dispatch('selectCarritoByPedidoId', response.id).then(function (response1) {\n              console.log('carrito ', response1);\n            });\n          }\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["Toolbar.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <v-card dark class=\"primary\"> \r\n    <v-layout row wrap  >\r\n      <v-flex xs6 sm2 md2 order-xs1 order-sm1 order-md1>\r\n        <!-- <v-card dark color=\"primary\">\r\n          <v-card-text class=\"px-0\">Trovare</v-card-text>\r\n        </v-card> -->\r\n        <v-card-text class=\"text-md-center\">\r\n          <router-link class=\"estiloTitulo\" :to=\"{ name: 'mainPage' }\"><span> Trovare</span></router-link>\r\n          <!-- Trovare -->\r\n        </v-card-text>\r\n      </v-flex>\r\n      <v-flex xs12 sm8 md8 order-xs3 order-sm2 order-md2>\r\n        <v-text-field\r\n        class=\"mx-3 mt-2\"\r\n        flat\r\n        dark\r\n        label=\"Buscar\"\r\n        prepend-inner-icon=\"search\"\r\n        solo-inverted\r\n        v-model=\"searchField\"\r\n        @keyup.enter=\"search\"\r\n        ></v-text-field>\r\n      </v-flex>\r\n\r\n      <v-flex xs6 sm2 md2 order-xs2 order-sm3 order-md3>\r\n        <v-content class=\"text-xs-right text-md-center\">\r\n            <v-bottom-nav class=\"remove-shadow\"\r\n            absolute\r\n              color=\"primary\"\r\n            >\r\n              <v-btn flat color=\"white\">\r\n                <span>Mi Cuenta</span>\r\n                <v-icon size=\"18\">account_circle</v-icon>\r\n                \r\n              </v-btn>\r\n              <router-link :to=\"{ name: 'carrito'}\">\r\n                <v-btn flat color=\"white\" >\r\n                  <span>carrito({{this.$store.getters.getCantidadCarrito}})</span>\r\n                  <v-icon size=\"18\">shopping_cart</v-icon>\r\n                  \r\n                </v-btn>\r\n              </router-link>\r\n          </v-bottom-nav>\r\n            \r\n        </v-content>\r\n      </v-flex>\r\n      <v-flex sm-12  order-xs4 order-sm4 order-md4>\r\n        <v-tabs\r\n          slot=\"extension\"\r\n          v-model=\"tabs\"\r\n          left\r\n          grow\r\n          color=\"transparent\"\r\n        >\r\n        <v-tab :to=\"{name:'categories'}\">\r\n          <v-menu :full-width=true open-on-hover nudge-bottom=40 class=\"full-with\" >\r\n            <v-btn\r\n              class=\"remove-shadow full-with\"\r\n              slot=\"activator\"\r\n              color=\"transparent\"\r\n              dark\r\n            >\r\n              Categorias\r\n              <v-icon>arrow_drop_down</v-icon> \r\n            </v-btn>\r\n            <v-list>\r\n              <v-list-tile\r\n                v-for=\"(category, index) in categories\"\r\n                :key=\"index\"\r\n                :to=\"{name:'search',query: { id: category.id}}\"\r\n              >\r\n                <v-list-tile-title>{{ category.name }}</v-list-tile-title>\r\n              </v-list-tile>\r\n            </v-list>\r\n          </v-menu>\r\n        </v-tab>\r\n        <v-tab :to=\"{name:'pedido'}\">\r\n          Pedido\r\n            <!-- <v-icon right dark>help_outline</v-icon> -->\r\n        </v-tab>\r\n        <!-- <v-tab :to=\"{name:'direccion'}\">\r\n          Direccion de invio\r\n          <v-icon right dark>location_on</v-icon>\r\n        </v-tab> -->\r\n          <!-- <v-tab\r\n            v-for=\"n in 3\"\r\n            :key=\"n\"\r\n          >\r\n            Item {{ n }}\r\n          </v-tab> -->\r\n        </v-tabs>\r\n      </v-flex>\r\n    </v-layout>\r\n  </v-card>\r\n</template>\r\n\r\n<script>\r\nimport {categoryParentUrl,carritoUrl} from '@/packages/config'\r\nexport default {\r\n    data () {\r\n      return {\r\n        tabs: null,\r\n        searchField:'',\r\n        categories: [],\r\n      }\r\n    },\r\n    created(){\r\n      // if(this.$store.state.auth.token !==null){\r\n      this.fillCategory()\r\n      this.fillCarrito()\r\n      // }\r\n    },\r\n    methods:{\r\n      fillCategory(){\r\n          this.$myApi.get(categoryParentUrl)\r\n          .then(response =>{\r\n            // console.log('categorias toolbar',response )\r\n            this.categories = response.data\r\n          })\r\n        \r\n      },\r\n      //esto lo utilizo solo para hacer consulta cuando hay dos carrito distinto \r\n      getCarritoByPedidoId(pedido_id){\r\n        return new Promise((resolve, reject) => {\r\n          this.$myApi.get(carritoUrl + '/'+ pedido_id)\r\n          .then(response =>{\r\n            // console.log('carrito ',response)\r\n            resolve(response.data.carrito)\r\n            // return response.data.carrito\r\n          })\r\n        })\r\n      },\r\n      search(){\r\n        if(this.searchField == null || this.searchField == \"\"){\r\n          this.$router.push({name:'mainPage'})\r\n        }else{\r\n          this.$router.push({ name: 'search', query: { q: this.searchField } })\r\n        }\r\n      },\r\n      fillCarrito(){\r\n        var pedido_id = localStorage.getItem('pedido_id')\r\n        var token = localStorage.getItem('access_token')\r\n\r\n        if(pedido_id == null && token != null){\r\n          this.$store.dispatch('selectPedidoByUserId')\r\n          .then(response => {\r\n          console.log('pedidoId null y toke not null',response) \r\n              if(response !== null){\r\n                this.$store.dispatch('selectCarritoByPedidoId',response.id)\r\n                .then(response =>{\r\n                console.log('carrito ',response)\r\n              })\r\n            }\r\n          })\r\n        }else if(pedido_id != null && token != null){\r\n          this.$store.dispatch('selectPedidoByUserId')\r\n          .then(response1 => {\r\n          console.log('pedidoId null y toke not null 1',response1) \r\n              if(response1 !== null){\r\n                if(response1.id !== parseInt(pedido_id)){\r\n                  //aqui solo ulitizo el metodo getCarritoByPedidoId por que solo quiero el resultado de \r\n                  //ambos carrito para luego hacer una fusion\r\n                  let userCart\r\n                  let oldCarrito\r\n                  this.getCarritoByPedidoId(parseInt(response1.id))\r\n                  .then(responseUser=>{\r\n                    userCart = responseUser\r\n                    this.getCarritoByPedidoId(parseInt(pedido_id))\r\n                    .then(responseUser=>{\r\n                      oldCarrito = responseUser\r\n                      console.log('old carrito', oldCarrito)\r\n                      console.log('userCart ', userCart)\r\n                      for(var index in oldCarrito){\r\n                        let find =  userCart.find(file => file.product_id !== oldCarrito[index].product_id)\r\n                        if(find){\r\n                          let objCart = {\r\n                            product_id:     oldCarrito[index].product_id, \r\n                            pedido_id:      find.pedido_id,\r\n                            quantity:       oldCarrito[index].quantity,\r\n                            price:          oldCarrito[index].price,\r\n                          }\r\n                          this.$store.dispatch('createAndUpdateCarrito',objCart)\r\n                        }\r\n                      }\r\n                      this.$store.dispatch('deletePedidoAndCarritoByPedidoId',oldCarrito[index].pedido_id)\r\n                      .then(responseDelete=>{\r\n                        console.log('se elimino',responseDelete)\r\n                      })\r\n                    });\r\n                  });\r\n                }else{\r\n                this.$store.dispatch('selectCarritoByPedidoId',response1.id)\r\n                .then(response3 =>{\r\n                console.log('carrito ',response3)\r\n                })\r\n              }\r\n            }\r\n        })\r\n        }else if(pedido_id != null && token == null){\r\n          this.$store.dispatch('selectPedidoById',pedido_id)\r\n          .then(response => {\r\n            console.log('pedidoId not null y toke null 2',response) \r\n              if(response !== null){\r\n                // this.$store.commit('selectPedidoByUserId',response)\r\n                this.$store.dispatch('selectCarritoByPedidoId',response.id)\r\n                .then(response1 =>{\r\n                console.log('carrito ',response1)\r\n              })\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n  .v-text-field__details{\r\n    display: none;\r\n  }\r\n  .v-item-group.v-bottom-nav .v-btn{\r\n    min-width: 62px;\r\n  }\r\n  .remove-shadow{\r\n    -webkit-box-shadow:none !important;\r\n    box-shadow:none !important;\r\n  }\r\n  .full-with{\r\n    width: 100%;\r\n  }\r\n  .estiloTitulo{\r\n    color:#fff;\r\n    text-decoration:none;   \r\n    font-family: 'Roboto', sans-serif;\r\n    line-height: 1.5;\r\n  }\r\n</style>\r\n"],"sourceRoot":"src\\components\\main"}]}