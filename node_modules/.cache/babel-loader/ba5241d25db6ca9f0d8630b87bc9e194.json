{"remainingRequest":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js??ref--13-0!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\store\\modules\\auth.js","dependencies":[{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\store\\modules\\auth.js","mtime":1568040472159},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _Promise from \"D:\\\\kevin\\\\proyectos\\\\vue\\\\trovare_frontend\\\\EcomerceFrontend\\\\node_modules\\\\@babel\\\\runtime-corejs2/core-js/promise\";\n// import Vue from 'vue'\n// import axios from 'axios'\n// import Auth from '../packages/Auth.js'\nimport { loginUrlCustom, logoutUrl, registertUrl } from '../../packages/config'; // Vue.use(Auth)\n\nvar state = {\n  token: localStorage.getItem('access_token') || null\n};\nvar getters = {\n  loggedIn: function loggedIn() {\n    return state.token !== null;\n  }\n};\nvar mutations = {\n  retrieveToken: function retrieveToken(state, token) {\n    state.token = token;\n  },\n  destroyToken: function destroyToken(state) {\n    state.token = null;\n  }\n};\nvar actions = {\n  retrieveToken: function retrieveToken(context, credentials) {\n    var _this = this;\n\n    return new _Promise(function (resolve, reject) {\n      _this.$myApi.post(loginUrlCustom, {\n        username: credentials.username,\n        password: credentials.password\n      }).then(function (response) {\n        var token = response.data.access_token;\n        localStorage.setItem('access_token', token);\n        context.commit('retrieveToken', token);\n        resolve(response); // console.log(response);\n      }).catch(function (error) {\n        // console.log(error)\n        reject(error);\n      });\n    }); // commit('SET_AUTH_USER',userObj)\n  },\n  destroyToken: function destroyToken(context) {\n    var _this2 = this;\n\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\n    if (context.getters.loggedIn) {\n      return new _Promise(function (resolve, reject) {\n        _this2.$myApi.post(logoutUrl).then(function (response) {\n          localStorage.removeItem('access_token');\n          localStorage.removeItem('pedido_id');\n          context.commit('destroyToken');\n          resolve(response); // console.log(response);\n          // context.commit('addTodo', response.data)\n        }).catch(function (error) {\n          localStorage.removeItem('access_token');\n          context.commit('destroyToken');\n          reject(error);\n        });\n      });\n    }\n  },\n  register: function register(context, data) {\n    var _this3 = this;\n\n    return new _Promise(function (resolve, reject) {\n      _this3.$myApi.post(registertUrl, {\n        name: data.name,\n        email: data.email,\n        password: data.password\n      }).then(function (response) {\n        resolve(response);\n      }).catch(function (error) {\n        reject(error);\n      });\n    });\n  }\n};\nexport default {\n  state: state,\n  getters: getters,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\store\\modules\\auth.js"],"names":["loginUrlCustom","logoutUrl","registertUrl","state","token","localStorage","getItem","getters","loggedIn","mutations","retrieveToken","destroyToken","actions","context","credentials","resolve","reject","$myApi","post","username","password","then","response","data","access_token","setItem","commit","catch","error","removeItem","register","name","email"],"mappings":"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","sourcesContent":["// import Vue from 'vue'\r\n// import axios from 'axios'\r\n// import Auth from '../packages/Auth.js'\r\nimport {loginUrlCustom,logoutUrl,registertUrl} from '../../packages/config'\r\n\r\n// Vue.use(Auth)\r\nconst state = {\r\n  token: localStorage.getItem('access_token') || null,\r\n}\r\n\r\nconst getters={\r\n  loggedIn(){\r\n    return state.token !== null\r\n  }\r\n}\r\n\r\nconst mutations = {\r\n  retrieveToken(state, token) {\r\n    state.token = token\r\n  },\r\n\r\n\r\n  destroyToken(state) {\r\n    state.token = null\r\n  },\r\n}\r\n\r\nconst actions = {\r\n\r\n  retrieveToken (context, credentials){\r\n    return new Promise((resolve, reject) => {\r\n      this.$myApi.post(loginUrlCustom,{\r\n        username: credentials.username,\r\n        password: credentials.password,\r\n      })\r\n      .then(response=>{\r\n        const token = response.data.access_token\r\n        localStorage.setItem('access_token', token)\r\n        context.commit('retrieveToken', token)\r\n        resolve(response)\r\n        // console.log(response);\r\n      })\r\n      .catch(error =>{\r\n        // console.log(error)\r\n            reject(error)\r\n      })\r\n    })\r\n    // commit('SET_AUTH_USER',userObj)\r\n  },\r\n\r\n  destroyToken(context) {\r\n    // axios.defaults.headers.common['Authorization'] = 'Bearer ' + context.state.token\r\n\r\n    if (context.getters.loggedIn) {\r\n      return new Promise((resolve, reject) => {\r\n        this.$myApi.post(logoutUrl)\r\n          .then(response => {\r\n            localStorage.removeItem('access_token')\r\n            localStorage.removeItem('pedido_id')\r\n            context.commit('destroyToken')\r\n            resolve(response)\r\n            // console.log(response);\r\n            // context.commit('addTodo', response.data)\r\n          })\r\n          .catch(error => {\r\n            localStorage.removeItem('access_token')\r\n            context.commit('destroyToken')\r\n            reject(error)\r\n          })\r\n      })\r\n    }\r\n  },\r\n  register(context, data) {\r\n    return new Promise((resolve, reject) => {\r\n      this.$myApi.post(registertUrl, {\r\n        name: data.name,\r\n        email: data.email,\r\n        password: data.password,\r\n      })\r\n        .then(response => {\r\n          resolve(response)\r\n        })\r\n        .catch(error => {\r\n          reject(error)\r\n        })\r\n    })\r\n  },\r\n\r\n}\r\n\r\n\r\nexport default{\r\n  state, getters, mutations, actions\r\n}\r\n"]}]}