{"remainingRequest":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\views\\administration\\product\\form.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\views\\administration\\product\\form.vue","mtime":1567944038852},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport stepOne from './stepOne'\r\nimport stepTwo from './stepTwo'\r\n// import stepThree from './stepThree'\r\nimport stepFour from './stepFour'\r\nexport default {\r\ndata () {\r\n      return {\r\n        method:'post',\r\n        stepper: 0,\r\n        steps: [\r\n            {\r\n                label: 'product',\r\n                completed: false,\r\n            },\r\n            {\r\n                label: 'description and characteristic',\r\n                completed: false,\r\n            },\r\n            {\r\n                label: 'imagenes',\r\n                completed: false,\r\n            },\r\n        ],\r\n      }\r\n    },\r\n    created(){\r\n        this.$store.dispatch('clearFields')\r\n\r\n    },\r\n    beforeMount() {\r\n        if(this.$route.meta.mode === 'edit') {\r\n            this.method = 'put'\r\n            this.fillProductForUpdate()\r\n        }\r\n    },\r\n    components:{\r\n        stepOne,\r\n        stepTwo,\r\n        // stepThree\r\n        stepFour\r\n    },\r\n    methods:{\r\n        nextStep(step){\r\n                this.stepper = step\r\n                console.log('next')\r\n        },\r\n        finish(){\r\n            console.log('termino')\r\n            let object ={\r\n                auth:this.$store.state.auth.token,\r\n                productId : this.$route.params.id,\r\n                method : this.method\r\n            }\r\n            this.$store.dispatch('CreateAndUpdateProductSubmit',object)\r\n            this.$store.dispatch('addingImageFirebase')\r\n            .then((response) => {\r\n                if(response){\r\n                console.log('puede seguir',response)\r\n                    this.$store.dispatch('CreateAndUpdateCharacteristic',object)\r\n                    this.$store.dispatch('createAndUpdateFileProduct',object)\r\n                    if(this.method == 'put' && this.$store.product.fileForDelete.length > 0){\r\n                        this.$store.dispatch('deleteImageFirebaseAndDataBase',object)\r\n                    }\r\n                    this.$router.push({ name: 'mainProduct' })\r\n                }\r\n            })\r\n        },\r\n        generateUUID() { \r\n            var d = new Date().getTime();\r\n            if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n                d += performance.now(); //use high-precision timer if available\r\n            }\r\n            var newGuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return newGuid;\r\n        },\r\n        fillProductForUpdate(){\r\n             let object ={\r\n                auth:this.$store.state.auth.token,\r\n                id : this.$route.params.id\r\n            }\r\n            this.$store.dispatch('fillProductById',object)\r\n            this.$store.dispatch('fillCharacteristicByProductId',object)\r\n            this.$store.dispatch('fillFileByProductId',object)\r\n        }\r\n    }\r\n\r\n}\r\n",{"version":3,"sources":["form.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"form.vue","sourceRoot":"src\\views\\administration\\product","sourcesContent":["<template>\r\n  <div id=\"pageIndexCategory\">\r\n      <v-container grid-list-xl fluid>\r\n        <v-stepper v-model=\"stepper\">\r\n            <v-stepper-header>\r\n                <div class=\"step\" v-for=\"(step, index) in steps\" :key=index>\r\n                <v-stepper-step\r\n                    :edit-icon=\"'check'\"\r\n                    :complete-icon=\"'edit'\"\r\n                    :step=\"index + 1\"\r\n                    :complete=\"(index + 1 ) <= stepper\"\r\n                    :editable=\"(index + 1) < stepper\">{{ step.label }}</v-stepper-step>\r\n                <v-divider></v-divider>\r\n            </div>\r\n            </v-stepper-header>\r\n\r\n            <v-stepper-items>\r\n                <v-stepper-content step=\"1\">\r\n                    <step-one @next-step=\"nextStep(2)\"></step-one>\r\n                </v-stepper-content>\r\n\r\n                <v-stepper-content step=\"2\">\r\n                    <step-two @next-step=\"nextStep(3)\"></step-two>\r\n                </v-stepper-content>\r\n\r\n                <!-- <v-stepper-content step=\"3\">\r\n                    <step-three @next-step=\"finish()\"></step-three>\r\n                </v-stepper-content> -->\r\n                 <v-stepper-content step=\"3\">\r\n                    <step-four @next-step=\"finish()\" ></step-four>\r\n                </v-stepper-content>\r\n            </v-stepper-items>\r\n        </v-stepper>\r\n      </v-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport stepOne from './stepOne'\r\nimport stepTwo from './stepTwo'\r\n// import stepThree from './stepThree'\r\nimport stepFour from './stepFour'\r\nexport default {\r\ndata () {\r\n      return {\r\n        method:'post',\r\n        stepper: 0,\r\n        steps: [\r\n            {\r\n                label: 'product',\r\n                completed: false,\r\n            },\r\n            {\r\n                label: 'description and characteristic',\r\n                completed: false,\r\n            },\r\n            {\r\n                label: 'imagenes',\r\n                completed: false,\r\n            },\r\n        ],\r\n      }\r\n    },\r\n    created(){\r\n        this.$store.dispatch('clearFields')\r\n\r\n    },\r\n    beforeMount() {\r\n        if(this.$route.meta.mode === 'edit') {\r\n            this.method = 'put'\r\n            this.fillProductForUpdate()\r\n        }\r\n    },\r\n    components:{\r\n        stepOne,\r\n        stepTwo,\r\n        // stepThree\r\n        stepFour\r\n    },\r\n    methods:{\r\n        nextStep(step){\r\n                this.stepper = step\r\n                console.log('next')\r\n        },\r\n        finish(){\r\n            console.log('termino')\r\n            let object ={\r\n                auth:this.$store.state.auth.token,\r\n                productId : this.$route.params.id,\r\n                method : this.method\r\n            }\r\n            this.$store.dispatch('CreateAndUpdateProductSubmit',object)\r\n            this.$store.dispatch('addingImageFirebase')\r\n            .then((response) => {\r\n                if(response){\r\n                console.log('puede seguir',response)\r\n                    this.$store.dispatch('CreateAndUpdateCharacteristic',object)\r\n                    this.$store.dispatch('createAndUpdateFileProduct',object)\r\n                    if(this.method == 'put' && this.$store.product.fileForDelete.length > 0){\r\n                        this.$store.dispatch('deleteImageFirebaseAndDataBase',object)\r\n                    }\r\n                    this.$router.push({ name: 'mainProduct' })\r\n                }\r\n            })\r\n        },\r\n        generateUUID() { \r\n            var d = new Date().getTime();\r\n            if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n                d += performance.now(); //use high-precision timer if available\r\n            }\r\n            var newGuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return newGuid;\r\n        },\r\n        fillProductForUpdate(){\r\n             let object ={\r\n                auth:this.$store.state.auth.token,\r\n                id : this.$route.params.id\r\n            }\r\n            this.$store.dispatch('fillProductById',object)\r\n            this.$store.dispatch('fillCharacteristicByProductId',object)\r\n            this.$store.dispatch('fillFileByProductId',object)\r\n        }\r\n    }\r\n\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}