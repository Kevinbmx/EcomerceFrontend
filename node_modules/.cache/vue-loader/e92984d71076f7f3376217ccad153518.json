{"remainingRequest":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\views\\administration\\product\\stepTwo.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\views\\administration\\product\\stepTwo.vue","mtime":1580396532704},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1580396457614},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1580396518341},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1580396514635}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapMultiRowFields } from \"vuex-map-fields\";\r\n  export default {\r\n    data () {\r\n      return {\r\n    \r\n      }\r\n    },\r\n    computed:{\r\n      ...mapMultiRowFields([\"characteristics\"]),\r\n        description: {\r\n        get () {\r\n            return this.$store.state.product.productObj.description\r\n        },\r\n        set (value) {\r\n            this.$store.commit('updateDescription', value)\r\n        }\r\n        },\r\n    },\r\n    methods:{\r\n      validate(){\r\n      this.$validator.validate().then(result => {\r\n        if (result) {\r\n          this.$emit('next-step')\r\n        }\r\n      });\r\n    },\r\n    addCharacteristic(){\r\n       this.$validator.validate().then(result => {\r\n        if (result) {\r\n          this.$store.dispatch('addCharacteristic')\r\n        }\r\n      });\r\n    },\r\n    deleteCharacteristic(index){\r\n      var state = this.$route.meta.mode\r\n      let obj = {\r\n        index : index,\r\n        state :state\r\n      }\r\n      this.$store.dispatch('deleteCharacteristic',obj)\r\n    }\r\n    }\r\n  }\r\n",{"version":3,"sources":["stepTwo.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"stepTwo.vue","sourceRoot":"src\\views\\administration\\product","sourcesContent":["<template>\r\n  <div>\r\n    <v-form>\r\n      <v-layout\r\n        wrap\r\n        justify-space-between\r\n      >\r\n        <v-flex\r\n              xs12\r\n              md12\r\n        >\r\n          <v-textarea\r\n            v-validate=\"'required'\"\r\n            name=\"nameProduct\" \r\n            label=\"descripcion del producto\" \r\n            type=\"text\" \r\n            :error-messages=\"errors.collect('description')\"\r\n            data-vv-name=\"description\"\r\n            required\r\n            v-model=\"description\">\r\n          </v-textarea>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout\r\n       v-for=\"(charact, index) in characteristics\" :key=\"index\"\r\n        wrap\r\n        justify-space-between\r\n      >\r\n        <v-flex xs9 sm11 md11 v-show=\"charact.state !== 'delete'\">\r\n          <v-text-field\r\n            v-validate=\"'required'\"\r\n            :label=\"'caracteristica '+ (index+1)\" \r\n            type=\"text\" \r\n            :error-messages=\"errors.collect('characteristica '+(index+1))\"\r\n            :data-vv-name=\"'characteristica '+(index+1)\"\r\n            required\r\n            v-model=\"charact.characteristicName\">\r\n          </v-text-field>\r\n        </v-flex>\r\n        <v-flex xs3 sm1 md1 v-show=\"charact.state !== 'delete'\" >\r\n          <v-tooltip top>\r\n            <v-btn @click=\"deleteCharacteristic(index)\"   slot=\"activator\" flat icon color=\"red\">\r\n              <v-icon>delete</v-icon>\r\n            </v-btn>\r\n             <span>eliminar caracteristica</span>\r\n          </v-tooltip>\r\n        </v-flex>\r\n      </v-layout>\r\n      <v-layout  wrap\r\n        justify-space-between>\r\n        <v-flex xs12\r\n              md12>\r\n          <v-tooltip top>\r\n            <v-btn @click=\"addCharacteristic()\"   slot=\"activator\" flat icon color=\"primary\">\r\n              <v-icon>add_circle</v-icon>\r\n            </v-btn>\r\n            <span>new characteristic</span>\r\n          </v-tooltip>\r\n        </v-flex>\r\n        <v-flex xs12\r\n              md12>\r\n          <v-btn\r\n            color=\"primary\"\r\n            @click=\"validate()\"\r\n            >\r\n            Continue\r\n          </v-btn>\r\n        </v-flex>\r\n      </v-layout>\r\n    </v-form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMultiRowFields } from \"vuex-map-fields\";\r\n  export default {\r\n    data () {\r\n      return {\r\n    \r\n      }\r\n    },\r\n    computed:{\r\n      ...mapMultiRowFields([\"characteristics\"]),\r\n        description: {\r\n        get () {\r\n            return this.$store.state.product.productObj.description\r\n        },\r\n        set (value) {\r\n            this.$store.commit('updateDescription', value)\r\n        }\r\n        },\r\n    },\r\n    methods:{\r\n      validate(){\r\n      this.$validator.validate().then(result => {\r\n        if (result) {\r\n          this.$emit('next-step')\r\n        }\r\n      });\r\n    },\r\n    addCharacteristic(){\r\n       this.$validator.validate().then(result => {\r\n        if (result) {\r\n          this.$store.dispatch('addCharacteristic')\r\n        }\r\n      });\r\n    },\r\n    deleteCharacteristic(index){\r\n      var state = this.$route.meta.mode\r\n      let obj = {\r\n        index : index,\r\n        state :state\r\n      }\r\n      this.$store.dispatch('deleteCharacteristic',obj)\r\n    }\r\n    }\r\n  }\r\n</script>\r\n<style>\r\n\r\n</style>\r\n"]}]}