{"remainingRequest":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\views\\administration\\product\\stepFour.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\src\\views\\administration\\product\\stepFour.vue","mtime":1567943927637},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\kevin\\proyectos\\vue\\trovare_frontend\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapGetters } from 'vuex'\r\nimport { mapMultiRowFields } from \"vuex-map-fields\";\r\nexport default {\r\n      data () {\r\n      return {\r\n        dialogButton:true,\r\n        dialog: false,\r\n        mostrar:true,\r\n        index:'',\r\n        disableButtonAddFile:true,\r\n        dessapearDeleteButton:true\r\n      }\r\n    },\r\n    mounted(){\r\n      for (let index = 0; index < this.fileGetter.length; index++) {\r\n        const element = this.fileGetter[index];\r\n        if(element.url==''){\r\n          this.disableButtonAddFile=false\r\n          this.dialogButton = false\r\n        }\r\n      }\r\n    },\r\n     watch: {\r\n      dialog (val) {\r\n        if (!val) return\r\n\r\n        setTimeout(() => (this.dialog = false), 4000)\r\n      }\r\n    },\r\n  \r\n     computed:{\r\n    ...mapMultiRowFields([\"files\"]),\r\n    ...mapGetters([\r\n            'fileGetter',\r\n        ]),\r\n    },\r\n    methods:{\r\n       \r\n        generateUUID() { \r\n            var d = new Date().getTime();\r\n            if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n                d += performance.now(); //use high-precision timer if available\r\n            }\r\n            var newGuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return newGuid;\r\n        },\r\n        onFilePicked (event) {\r\n            const files = event.target.files\r\n            let filename = files[0].name\r\n            if (filename.lastIndexOf('.') <= 0) {\r\n              return alert('Please add a valid file!')\r\n            }\r\n            const fileReader = new FileReader()\r\n            fileReader.addEventListener('load', () => {\r\n            let object ={\r\n                    index : this.index,\r\n                    url : fileReader.result,\r\n                    file:files,\r\n                    uuid:this.generateUUID()\r\n            }\r\n            this.$store.dispatch('putImage',object)\r\n            })\r\n            fileReader.readAsDataURL(files[0])\r\n            var sizeFile = this.fileGetter.length\r\n            if(sizeFile == this.$store.state.product.maxUploadImage){\r\n                this.disableButtonAddFile = true\r\n                  this.dialogButton = false\r\n            }else{\r\n            this.image = files[0]\r\n            this.disableButtonAddFile = false\r\n            this.mostrar = false\r\n            this.dessapearDeleteButton=true\r\n            this.dialogButton = false\r\n            }\r\n        },\r\n        onPickFile (index) {\r\n            this.index = index\r\n            this.$refs.fileInput[index].click()\r\n        },\r\n        deleteFileImage(index){\r\n          var sizeFile = this.fileGetter.length\r\n          if((sizeFile-1) > 0){\r\n            this.$store.dispatch('deleteFileImage',index)\r\n            this.disableButtonAddFile = false\r\n            this.dialogButton = false\r\n          }else\r\n            if(index==0 && this.files[0].url !== ''){\r\n                this.$store.dispatch('emptyFile',index)\r\n                this.disableButtonAddFile = true\r\n                this.dialogButton = true\r\n            }\r\n        },\r\n        addFileImage(){\r\n            this.disableButtonAddFile = true\r\n            this.dialogButton = true\r\n        \r\n            var sizeFile = this.fileGetter.length\r\n            if(sizeFile < this.$store.state.product.maxUploadImage){\r\n              if(sizeFile == 0){\r\n                this.$store.dispatch('addFileImage')\r\n                return\r\n              }\r\n              if(this.fileGetter[(sizeFile-1)].url !== ''){\r\n                this.$store.dispatch('addFileImage')\r\n              }else{\r\n                this.disableButtonAddFile = false\r\n              }\r\n            } \r\n        },\r\n        validate(){\r\n                this.$emit('next-step')\r\n        }\r\n       \r\n    }\r\n}\r\n",{"version":3,"sources":["stepFour.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA","file":"stepFour.vue","sourceRoot":"src\\views\\administration\\product","sourcesContent":["<template>\r\n<div>\r\n   \r\n    <v-layout row>\r\n        <v-flex xs12 sm12 md12>\r\n            <v-alert\r\n        v-if=\"mostrar\"\r\n      :value=\"true\"\r\n      type=\"info\"\r\n    >\r\n      Debes subir al menos una sola imagen.\r\n    </v-alert>\r\n        </v-flex>\r\n    </v-layout>\r\n    <v-layout  wrap>\r\n        <v-flex xs12 sm6 md3  v-for=\"(file,index) in files\" :key=\"index\">\r\n            <v-card>\r\n                <v-img\r\n                :src=\"file.url\"\r\n                :lazy-src=\"file.url\"\r\n                aspect-ratio=\"1\"\r\n                contain\r\n                >\r\n                </v-img>\r\n                \r\n                <v-card-actions>\r\n                    <v-btn flat color=\"orange\" @click=\"onPickFile(index)\">Upload Image</v-btn>\r\n                    <input\r\n                        type=\"file\"\r\n                        style=\"display: none\"\r\n                        ref=\"fileInput\"\r\n                        accept=\"image/*\"\r\n                        @change=\"onFilePicked\">\r\n                    <v-btn flat color=\"orange\" v-show=\"dessapearDeleteButton\" @click=\"deleteFileImage(index)\">delete</v-btn>\r\n                </v-card-actions>\r\n            </v-card>\r\n        </v-flex>\r\n      <v-flex xs12 sm6 md3 >\r\n     <v-btn @click=\"addFileImage\" :disabled=\"disableButtonAddFile\" >otro</v-btn>\r\n      </v-flex>\r\n  </v-layout>\r\n   <v-btn\r\n      :disabled=\"dialogButton\"\r\n      :loading=\"dialog\"\r\n      class=\"white--text\"\r\n      color=\"primary\"\r\n      @click=\"validate()\"\r\n    >\r\n      finalizar\r\n    </v-btn>\r\n    <v-dialog\r\n      v-model=\"dialog\"\r\n      hide-overlay\r\n      persistent\r\n      width=\"300\"\r\n    >\r\n      <v-card\r\n        color=\"primary\"\r\n        dark\r\n      >\r\n        <v-card-text>\r\n          Guardando producto\r\n          <v-progress-linear\r\n            indeterminate\r\n            color=\"white\"\r\n            class=\"mb-0\"\r\n          ></v-progress-linear>\r\n        </v-card-text>\r\n      </v-card>\r\n    </v-dialog>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters } from 'vuex'\r\nimport { mapMultiRowFields } from \"vuex-map-fields\";\r\nexport default {\r\n      data () {\r\n      return {\r\n        dialogButton:true,\r\n        dialog: false,\r\n        mostrar:true,\r\n        index:'',\r\n        disableButtonAddFile:true,\r\n        dessapearDeleteButton:true\r\n      }\r\n    },\r\n    mounted(){\r\n      for (let index = 0; index < this.fileGetter.length; index++) {\r\n        const element = this.fileGetter[index];\r\n        if(element.url==''){\r\n          this.disableButtonAddFile=false\r\n          this.dialogButton = false\r\n        }\r\n      }\r\n    },\r\n     watch: {\r\n      dialog (val) {\r\n        if (!val) return\r\n\r\n        setTimeout(() => (this.dialog = false), 4000)\r\n      }\r\n    },\r\n  \r\n     computed:{\r\n    ...mapMultiRowFields([\"files\"]),\r\n    ...mapGetters([\r\n            'fileGetter',\r\n        ]),\r\n    },\r\n    methods:{\r\n       \r\n        generateUUID() { \r\n            var d = new Date().getTime();\r\n            if (typeof performance !== 'undefined' && typeof performance.now === 'function'){\r\n                d += performance.now(); //use high-precision timer if available\r\n            }\r\n            var newGuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\r\n                var r = (d + Math.random() * 16) % 16 | 0;\r\n                d = Math.floor(d / 16);\r\n                return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16);\r\n            });\r\n            return newGuid;\r\n        },\r\n        onFilePicked (event) {\r\n            const files = event.target.files\r\n            let filename = files[0].name\r\n            if (filename.lastIndexOf('.') <= 0) {\r\n              return alert('Please add a valid file!')\r\n            }\r\n            const fileReader = new FileReader()\r\n            fileReader.addEventListener('load', () => {\r\n            let object ={\r\n                    index : this.index,\r\n                    url : fileReader.result,\r\n                    file:files,\r\n                    uuid:this.generateUUID()\r\n            }\r\n            this.$store.dispatch('putImage',object)\r\n            })\r\n            fileReader.readAsDataURL(files[0])\r\n            var sizeFile = this.fileGetter.length\r\n            if(sizeFile == this.$store.state.product.maxUploadImage){\r\n                this.disableButtonAddFile = true\r\n                  this.dialogButton = false\r\n            }else{\r\n            this.image = files[0]\r\n            this.disableButtonAddFile = false\r\n            this.mostrar = false\r\n            this.dessapearDeleteButton=true\r\n            this.dialogButton = false\r\n            }\r\n        },\r\n        onPickFile (index) {\r\n            this.index = index\r\n            this.$refs.fileInput[index].click()\r\n        },\r\n        deleteFileImage(index){\r\n          var sizeFile = this.fileGetter.length\r\n          if((sizeFile-1) > 0){\r\n            this.$store.dispatch('deleteFileImage',index)\r\n            this.disableButtonAddFile = false\r\n            this.dialogButton = false\r\n          }else\r\n            if(index==0 && this.files[0].url !== ''){\r\n                this.$store.dispatch('emptyFile',index)\r\n                this.disableButtonAddFile = true\r\n                this.dialogButton = true\r\n            }\r\n        },\r\n        addFileImage(){\r\n            this.disableButtonAddFile = true\r\n            this.dialogButton = true\r\n        \r\n            var sizeFile = this.fileGetter.length\r\n            if(sizeFile < this.$store.state.product.maxUploadImage){\r\n              if(sizeFile == 0){\r\n                this.$store.dispatch('addFileImage')\r\n                return\r\n              }\r\n              if(this.fileGetter[(sizeFile-1)].url !== ''){\r\n                this.$store.dispatch('addFileImage')\r\n              }else{\r\n                this.disableButtonAddFile = false\r\n              }\r\n            } \r\n        },\r\n        validate(){\r\n                this.$emit('next-step')\r\n        }\r\n       \r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"]}]}