{"remainingRequest":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\views\\administration\\category\\nodeTree.vue?vue&type=script&lang=js&","dependencies":[{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\src\\views\\administration\\category\\nodeTree.vue","mtime":1592679456908},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\babel-loader\\lib\\index.js","mtime":1580396457614},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1580396518341},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1580396460146},{"path":"D:\\kevin\\proyectos\\vuejs\\EcomerceFrontend\\node_modules\\vue-loader\\lib\\index.js","mtime":1580396514635}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport { mapMutations } from 'vuex'\r\nexport default {\r\n  template: '#pageIndexCategory',\r\n  name: \"node\",\r\n  data: function () {\r\n    return {\r\n      open: false,\r\n      checkedCategories:false,\r\n      categoryIds:[]\r\n    }\r\n  },\r\n  props: {\r\n    node: Object\r\n  },\r\n  computed: {\r\n    isFolder: function () {\r\n      return this.node.children &&\r\n        this.node.children.length\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'stateOdCorrect'\r\n    ]),\r\n    toggle: function () {\r\n      if (this.isFolder) {\r\n        this.open = !this.open\r\n      }\r\n    },\r\n\r\n    changeType: function () {\r\n      if (!this.isFolder) {\r\n        this.$set(this.node, 'children', [])\r\n        this.addChild()\r\n        this.open = true\r\n      }\r\n    },\r\n\r\n    addChild: function () {\r\n      this.node.children.push({\r\n        name: 'new stuff'\r\n      })\r\n    },\r\n    abrirPopupError(title,text,icon){\r\n      //  this.$parent.abrirPopupError();\r\n      Swal.fire(title, text, icon);\r\n        // .then((value) => {\r\n        //    this.stateOdCorrect()\r\n        // });\r\n    },\r\n    addListChecked:function(e){\r\n      if (e.target.checked) {\r\n        this.$store.dispatch('checkedCategory', e.target.value)\r\n        .then(response =>{\r\n          if(!response){\r\n            console.log('chequeo incorrecto!')\r\n            var title = 'chequeo incorrecto'\r\n            var text = 'dedes chequear solamente en raiz'\r\n            var icon = 'error'\r\n            // this.stateOdCorrect()\r\n            this.abrirPopupError(title,text,icon)\r\n           \r\n          }\r\n        })\r\n      }else{\r\n        this.$store.dispatch('unCheckedCategory', e.target.value)\r\n      }\r\n    },\r\n  }\r\n};\r\n",{"version":3,"sources":["nodeTree.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"nodeTree.vue","sourceRoot":"src\\views\\administration\\category","sourcesContent":["<template>\r\n<div>\r\n  <li>\r\n    <div :class=\"{bold: isFolder}\">\r\n      <input type=\"checkbox\" @click=\"addListChecked($event)\" :id=\"node.id\" :value=\"node.id\"  v-model=\"checkedCategories\">\r\n      ({{node.id}}){{ node.name}}\r\n      <a  @click=\"toggle\" v-if=\"isFolder\">[{{ open ? '-' : '+' }}]</a>\r\n    </div>\r\n    <ul v-show=\"open\" v-if=\"isFolder\">\r\n      <node\r\n        v-for=\"(node,index) in node.children\"\r\n        :key=\"index\"\r\n        :node=\"node\">\r\n      </node>\r\n    </ul>\r\n  </li>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapMutations } from 'vuex'\r\nexport default {\r\n  template: '#pageIndexCategory',\r\n  name: \"node\",\r\n  data: function () {\r\n    return {\r\n      open: false,\r\n      checkedCategories:false,\r\n      categoryIds:[]\r\n    }\r\n  },\r\n  props: {\r\n    node: Object\r\n  },\r\n  computed: {\r\n    isFolder: function () {\r\n      return this.node.children &&\r\n        this.node.children.length\r\n    }\r\n  },\r\n  methods: {\r\n    ...mapMutations([\r\n      'stateOdCorrect'\r\n    ]),\r\n    toggle: function () {\r\n      if (this.isFolder) {\r\n        this.open = !this.open\r\n      }\r\n    },\r\n\r\n    changeType: function () {\r\n      if (!this.isFolder) {\r\n        this.$set(this.node, 'children', [])\r\n        this.addChild()\r\n        this.open = true\r\n      }\r\n    },\r\n\r\n    addChild: function () {\r\n      this.node.children.push({\r\n        name: 'new stuff'\r\n      })\r\n    },\r\n    abrirPopupError(title,text,icon){\r\n      //  this.$parent.abrirPopupError();\r\n      Swal.fire(title, text, icon);\r\n        // .then((value) => {\r\n        //    this.stateOdCorrect()\r\n        // });\r\n    },\r\n    addListChecked:function(e){\r\n      if (e.target.checked) {\r\n        this.$store.dispatch('checkedCategory', e.target.value)\r\n        .then(response =>{\r\n          if(!response){\r\n            console.log('chequeo incorrecto!')\r\n            var title = 'chequeo incorrecto'\r\n            var text = 'dedes chequear solamente en raiz'\r\n            var icon = 'error'\r\n            // this.stateOdCorrect()\r\n            this.abrirPopupError(title,text,icon)\r\n           \r\n          }\r\n        })\r\n      }else{\r\n        this.$store.dispatch('unCheckedCategory', e.target.value)\r\n      }\r\n    },\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n  li{\r\n    list-style: none;\r\n  }\r\n</style>\r\n"]}]}